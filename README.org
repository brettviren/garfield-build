#+TITLE: Build GARFIELD with waf

The [[http://garfield.web.cern.ch/garfield/][Garfield simulation of gaseous detectors]] is built with an archaic set of
tools and libraries.  This package tries its best to build the "garfield-9"
executable.

* Caveat

I have almost no understanding of the internals of Garfield and neBEM codes.
This build simply tries to complete and give a running executable.  If you do
have a clue and you see something stupid here, please tell me.

* Prerequisites

** Compiler

Fortran (~gfotran~) and C (~gcc~) compilers are needed.

** Install GNU scientific library

Run,

#+begin_example
$ sudo apt install libgsl-dev
#+end_example

or equivalent for your OS.

** CERNLIB

Download a recent "Community CERNLIB sources" from:

https://cernlib.web.cern.ch/version.html

Unpack and cd to the source and:

#+begin_example
$ mkdir biuld
$ cd build
$ cmake ..
$ make -j12
$ cmake --install . --prefix ~/opt/cernlib
#+end_example

With the modern CMake, this builds easy and fast.  Kudos those keeping this venerable package alive! 

Wherever you install it, make sure its the bin directory is in your path.

* Configure the build

#+begin_example
$ ./waf conigure
#+end_example

This will first attempt to download the ~neBEM~ source distribution from CERN.  At
the time of writing, accessing the URL requires CERN auth.  If ~waf~ fails to
download it, visit the URL in a browser and supply some auth that CERN accepts
and place the tar file in the main directory.  If you want get a different
version, edit ~nebem_version~ string in the ~wscript~ file.

The ~neBEM~ source distribution also includes ~libIsles.a~ which will be used.  The
other Isles libs and ~libNR.a~ and ~libVector.a~ libraries are ignored.

The ~./waf configure~ command must succeed before going on to the build.

* Building

#+begin_example
$ ./waf --prefix=$HOME/opt/garfield configure
#+end_example

Or, pick your favorite prefix.  Or, leave off the prefix.  The only final build
product is the ~garfield-9~ executable binary.  You can just as well do:

#+begin_example
$ cp build/garfield-9 $HOME/bin/  # or whatever
#+end_example

* Running ~garfield-9~

This is mostly out of scope for the ~garfield-build~ package but a brief primer.
Procure some ~.gar~ files with a main ~track.gar~ which you can field to stdin:

#+begin_example
$ garfield-9 < track.gar
#+end_example

Or, run interactively for X11 display and type ~<track.gar~ at the prompt.
