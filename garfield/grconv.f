CDECK  ID>, GRCONV.
       SUBROUTINE GRCONV(NPOL,XIN,YIN)
*-----------------------------------------------------------------------
*   GRCONV - Plots a convex polygon inside a box.
*   (Last changed on 13/ 5/99.)
*-----------------------------------------------------------------------
       implicit none
       INTEGER MXWIRE,MXSW,MXLIST,MXCHA,MXGRID,MXMATT,MXPOLE,MX3D,
     -         MXPSTR,
     -         MXPAIR,MXPART,MXFOUR,MXCLUS,
     -         MXLINE,MXEQUT,
     -         MXRECL,MXINCH,MXWORD,MXCHAR,MXNAME,MXLUN,
     -         MXINS,MXREG,MXARG,MXCONS,MXVAR,MXALGE,
     -         MXZERO,MXSTCK,MXFPNT,MXFPAR,MXWKLS,
     -         MXHLEV,MXHLRL,MXSUBT,
     -         MXDLVL,MXILVL,MXDLIN,
     -         MXHIST,MXFRAC,MXBANG,MXBTAB,
     -         MXEXG,MXIOG,MXCSG,
     -         MXORIA,
     -         MXMAT,MXEMAT,MXMDIM,
     -         MXSHOT,MXZPAR,
     -         MXMAP,MXEPS,MXWMAP,MXSOLI,MXSBUF,
     -         MXPLAN,MXPOIN,MXEDGE,
     -         MXMCA
       PARAMETER (MXWIRE=   300,MXSW  =   50)
       PARAMETER (MXMATT=    10)
       PARAMETER (MX3D  =   100)
       PARAMETER (MXPOLE=    10)
       PARAMETER (MXPSTR=   100)
       PARAMETER (MXLIST=  1000)
       PARAMETER (MXHIST=   200, MXCHA = MXLIST/2)
       PARAMETER (MXGRID=    50)
       PARAMETER (MXNAME=   200, MXLUN =    30)
       PARAMETER (MXCLUS=   500, MXPAIR=  2000, MXPART= 10000)
       PARAMETER (MXLINE=   150, MXEQUT=    50)
       PARAMETER (MXFOUR=    16)
       PARAMETER (MXRECL= 10000)
       PARAMETER (MXINCH=  2000, MXWORD=   200, MXCHAR=MXINCH)
       PARAMETER (MXINS =  1000, MXREG =   500, MXCONS=  -500,
     -            MXVAR =   500, MXALGE=   500, MXARG =   100)
       PARAMETER (MXMAT =   500, MXEMAT=200000, MXMDIM=   10)
       PARAMETER (MXZERO=MXWIRE)
       PARAMETER (MXSTCK=     5)
       PARAMETER (MXFPNT= 20000, MXFPAR=    10)
       PARAMETER (MXWKLS=    10)
       PARAMETER (MXHLEV=     9, MXSUBT=   200, MXHLRL=  860)
       PARAMETER (MXDLVL=    10, MXILVL=    20, MXDLIN= 2500)
       PARAMETER (MXFRAC=    13)
       PARAMETER (MXBANG=    20, MXBTAB=    25)
       PARAMETER (MXEXG =    50, MXIOG =    10, MXCSG =  200)
       PARAMETER (MXORIA=  1000)
       PARAMETER (MXSHOT=    10, MXZPAR=4*MXSHOT+2)
       PARAMETER (MXMAP =  5000,MXEPS =   10)
       PARAMETER (MXWMAP=     5)
       PARAMETER (MXSOLI=  1000)
       PARAMETER (MXPLAN= 50000, MXPOIN=100000,MXEDGE=100)
       PARAMETER (MXSBUF= 20000)
       PARAMETER (MXMCA = 50000)
*   The parameter MXNBMC must equal MXGNAM (sequence MAGBPARM) !
       INTEGER MXNBMC
       PARAMETER(MXNBMC=60)
       REAL USERX0,USERX1,USERY0,USERY1,FRXMIN,FRXMAX,FRYMIN,FRYMAX,
     -      ARRANG,ARRLEN,BARFRC,DISPX0,DISPX1,DISPY0,DISPY1,
     -      GPXN,GPXN10,GPYN,GPYN10,GPXL,GPYL,GPXT
       LOGICAL LGRID,LGRALL,LOGX,LOGY,LSTAMP,LGCLRB,LGCLRA,
     -      LWAITA,LWAITB,LXCCH,LGLCLP,LGMCLP,LGACLP,LGTCLP,
     -      WKMULT(MXWKLS)
       INTEGER NWK,WKID(MXWKLS),WKCON(MXWKLS),WKFREF(MXWKLS),
     -         WKLUN(MXWKLS),WKSTAT(MXWKLS),WKSREQ(MXWKLS),
     -         NCWKNM(MXWKLS),NCSTMP,IGHIST,IGBAR,NCGKS
       CHARACTER*20 WKNAME(MXWKLS),WKATTR(MXWKLS)
       CHARACTER*80 STAMP
       CHARACTER*(MXNAME) GKSLOG
       COMMON /GRADAT/ USERX0,USERX1,USERY0,USERY1,ARRANG,ARRLEN,
     -      BARFRC,
     -      FRXMIN,FRXMAX,FRYMIN,FRYMAX,DISPX0,DISPX1,DISPY0,DISPY1,
     -      GPXN,GPXN10,GPYN,GPYN10,GPXL,GPYL,GPXT,
     -      LGRID,LGRALL,LOGX,LOGY,LSTAMP,LGCLRB,LGCLRA,LWAITA,LWAITB,
     -      LXCCH,LGLCLP,LGMCLP,LGACLP,LGTCLP,
     -      NWK,WKID,WKCON,WKFREF,WKLUN,WKSTAT,WKSREQ,NCWKNM,NCSTMP,
     -      IGHIST,IGBAR,NCGKS,WKMULT
       COMMON /GRACHR/ WKNAME,WKATTR,STAMP,GKSLOG
       LOGICAL         LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD
       INTEGER LUNOUT,JFAIL,JEXMEM
       COMMON /PRTPLT/ LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD,LUNOUT,JFAIL,JEXMEM
       COMPLEX ICONS
       REAL PI,CLOG2,EPS0,ECHARG,EMASS,CLIGHT,MEV2KG,BOLTZ,GRAV
       PARAMETER (PI=3.141592653589793238,
     -      CLOG2=0.693147180559945309417,
     -      ICONS=(0.0,1.0),
     -      EPS0=8.854187817E-14,
     -      ECHARG=1.60217733E-19,
     -      EMASS=9.1093897E-31,
     -      GRAV=9.80665,
     -      CLIGHT=2.99792458E4,
     -      MEV2KG = 1.782661845E-30,
     -      BOLTZ=1.380658E-23)
       DOUBLE PRECISION WGT,FPRMAT,
     -      FPROJ,FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX,GYBOX,GZBOX
       REAL PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM
       INTEGER NLINED,NGRIDX,NGRIDY,ITRTYP,NTRLIN,NTRSAM,INDPOS,NCTRW,
     -      NTRFLX,NINORD,
     -      NCPNAM,NCXLAB,NCYLAB,NCFPRO,IPRMAT,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,ITFSRM,NTRERR
       LOGICAL LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG,LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       COMMON /PARMS / WGT(MXLIST),FPRMAT(3,3),
     -      FPROJ(3,3),FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX(12),GYBOX(12),GZBOX(12),
     -      PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM,
     -      INDPOS(11000),IPRMAT(3),NCTRW,NCPNAM,
     -      ITRTYP,NTRLIN,NTRSAM,NTRFLX,ITFSRM,NTRERR(10),
     -      NLINED,NINORD,NGRIDX,NGRIDY,NCXLAB,NCYLAB,NCFPRO,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,
     -      LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG(10),LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       CHARACTER*80 PARTID,PXLAB,PYLAB,PROLAB
       CHARACTER*10 PNAME
       CHARACTER*5  PRVIEW
       CHARACTER*(MXCHAR) FCNTRW
       COMMON /PARCHR/ PARTID,FCNTRW,PNAME,PXLAB,PYLAB,PROLAB,PRVIEW
       REAL XIN(*),YIN(*),XPL(MXLIST),YPL(MXLIST),ZPL(MXLIST)
       DOUBLE PRECISION XPOL(MXLIST),YPOL(MXLIST),XAUX,YAUX
       INTEGER NPOL,I,J,NPL
       LOGICAL SKIP,INSIDE,EDGE,ADD,ONLIND
       EXTERNAL ONLIND
*** Make sure there is at least 1 input point.
       IF(NPOL.LE.2)THEN
            RETURN
*   Check maximum length.
       ELSEIF(NPOL.GT.MXLIST)THEN
            PRINT *,' !!!!!! GRCONV WARNING : Input vector length'//
     -           ' exceeds MXLIST ; area not plotted.'
            RETURN
       ENDIF
*** Copy the input vector.
       DO 10 I=1,NPOL
       XPOL(I)=DBLE(XIN(I))
       YPOL(I)=DBLE(YIN(I))
10     CONTINUE
*** Next find the intersections between the two sets.
       NPL=0
       DO 40 J=1,NPOL
*   Set flag to see whether we search for mid-line intersects.
       SKIP=.FALSE.
*   Scan the box.
       DO 30 I=1,NGBOX
*   See whether the polygon start is on any of the box edges.
       IF(ONLIND(GXBOX(1+MOD(I-1,NGBOX)),GYBOX(1+MOD(I-1,NGBOX)),
     -      GXBOX(1+MOD(I,NGBOX)),GYBOX(1+MOD(I,NGBOX)),
     -      XPOL(J),YPOL(J)))THEN
            IF(NPL.GE.MXLIST)GOTO 3000
            NPL=NPL+1
            XPL(NPL)=REAL(XPOL(J))
            YPL(NPL)=REAL(YPOL(J))
            ZPL(NPL)=0
            SKIP=.TRUE.
       ENDIF
*   See whether a box corner is on this polygon segment.
       IF(ONLIND(XPOL(1+MOD(J-1,NPOL)),YPOL(1+MOD(J-1,NPOL)),
     -      XPOL(1+MOD(J,NPOL)),YPOL(1+MOD(J,NPOL)),
     -      GXBOX(I),GYBOX(I)))THEN
            IF(NPL.GE.MXLIST)GOTO 3000
            NPL=NPL+1
            XPL(NPL)=REAL(GXBOX(I))
            YPL(NPL)=REAL(GYBOX(I))
            ZPL(NPL)=0
            SKIP=.TRUE.
       ENDIF
30     CONTINUE
*   If neither of this happened, look for mid-line intersects.
       IF(.NOT.SKIP)THEN
            DO 100 I=1,NGBOX
            CALL CRSPND(
     -           GXBOX(1+MOD(I-1,NGBOX)),GYBOX(1+MOD(I-1,NGBOX)),
     -           GXBOX(1+MOD(I  ,NGBOX)),GYBOX(1+MOD(I  ,NGBOX)),
     -           XPOL(1+MOD(J-1,NPOL)),YPOL(1+MOD(J-1,NPOL)),
     -           XPOL(1+MOD(J  ,NPOL)),YPOL(1+MOD(J  ,NPOL)),
     -           XAUX,YAUX,ADD)
            IF(ADD)THEN
                 IF(NPL.GE.MXLIST)GOTO 3000
                 NPL=NPL+1
                 XPL(NPL)=REAL(XAUX)
                 YPL(NPL)=REAL(YAUX)
                 ZPL(NPL)=0
            ENDIF
100         CONTINUE
       ENDIF
40     CONTINUE
*** Find the vertices of the box internal to the polygon.
       DO 50 I=1,NGBOX
       CALL INTERD(NPOL,XPOL,YPOL,GXBOX(I),GYBOX(I),INSIDE,EDGE)
*   Skip box corners on the polygon.
       IF(EDGE)GOTO 50
*   Add internal points.
       IF(INSIDE)THEN
            IF(NPL.GE.MXLIST)GOTO 3000
            NPL=NPL+1
            XPL(NPL)=REAL(GXBOX(I))
            YPL(NPL)=REAL(GYBOX(I))
            ZPL(NPL)=0
       ENDIF
50     CONTINUE
*** Find the vertices of the polygon internal to the box.
       DO 70 I=1,NPOL
*   Check whether the point is internal.
       XAUX=XPOL(I)
       YAUX=YPOL(I)
       CALL INTERD(NGBOX,GXBOX,GYBOX,XAUX,YAUX,INSIDE,EDGE)
*   Skip polygon corners on the box.
       IF(EDGE)GOTO 70
*   Add internal points.
       IF(INSIDE)THEN
            IF(NPL.GE.MXLIST)GOTO 3000
            NPL=NPL+1
            XPL(NPL)=REAL(XPOL(I))
            YPL(NPL)=REAL(YPOL(I))
            ZPL(NPL)=0
       ENDIF
70     CONTINUE
*** Ensure there is no butterfly.
       CALL BUTFLY(NPL,XPL,YPL,ZPL)
*** Plot the polygon.
       IF(NPL.GE.3)CALL GFA(NPL,XPL,YPL)
       RETURN
*** Buffer overflow.
3000   CONTINUE
       PRINT *,' !!!!!! GRCONV WARNING : Plot vector buffer'//
     -      ' overflow; area not plotted.'
       END
