CDECK  ID>, HENKE.
	subroutine henke
c
c	include Henke's data

	implicit none

c         include 'GoEvent.inc'
c      Main control variables


	integer soo		   ! Flag, allowing to print
				   !  to stream 'oo'
				   ! If it is 0, no print will be at all,
				   ! except the case of serious problems.
	integer oo		   ! The output stream logical number.
	integer qevt		   ! Quantity of events to produce.
	integer nevt		   ! Current number of the event.
	integer ninfo		   ! Quantity of the first events
				   ! to print debug info.
	integer ssimioni	   ! Flag to simulate ionization loss,
				   ! 0 - no ionization,
				   ! 1 - to simulate ionization.
				   !
				   !
				   !
	integer srandoff	   ! Flag to swich off the randomization
				   ! in function treatdel.
				   ! It is for debug and without guarantee.
	parameter (srandoff=0)	   ! Normal regim with randommization.

	integer pqup		   ! dimensions of arrays of auxiliary
				   ! parameters in abs.inc, rga.inc,
				   ! del.inc
	parameter (pqup=1)


	integer sret_err	! Sign to return the control from current
		! subroutine to which is called it if error is occured.
		! 1 - to return, 0 - to stop.
		! It is intended for handling with subroutine SHEED.
		! In the case of error it can return the control instead of
		! stop. But not for every possible errors return is done.
		! Some of the most original errors could lead to stop.
		! When working with HEED program, sret_err must be zero.
	integer s_err	! Sign of error.
		! 1 - error, 0 - no error

	character*9  TaskName	   ! Name of task, using for generating
				   ! file names.
	character*40 OutputFile	   ! Name of file with output listing.
				   ! Using only in IniHeed.
*** Common split in character and non-character parts (RV 26/10/2007).
	common / cGoEve /
     +	soo, oo,
     +	qevt,nevt,ninfo,
     +	ssimioni,
     +	sret_err, s_err
        common / cGoEveCHR /
     +	TaskName,
     +	OutputFile

	save / cGoEve /
	save / cGoEveCHR /
*** End of change

c 	include 'shellfi.inc'
	integer pqash		! Max. q. of shells
	parameter (pqash=7)
	integer zato		! Z of atom
	integer qash		! quantity of shells
	real athreshold,aweight	! threshold and weight of shells
	integer pqaener,qaener	! Max. and just q. of shell energy
	parameter (pqaener=500)
	real aener		! Energy
	real aphot		! Photoabsorbtion crossection
			! for this point of energy
	common / cshellfi /
     +		zato,
     +		qash,
     +		athreshold(pqash),aweight(pqash),
     +		qaener(pqash),
     +		aener(pqaener,pqash),aphot(pqaener,pqash)
	save / cshellfi /

	integer nae,ns


	qash=0		!sign of absence


c	The next code is generated by a computer program
c	on the basis of data file 'henke.dat'.


	if(zato.eq.6)then
	
c 	include 'henke6.inc'
	qash=2

	qaener(1)=10
	athreshold(1)=291
	aener(1,1)=311.7
	aphot(1,1)=0.839895
	aener(2,1)=392.4
	aphot(2,1)=0.49875
	aener(3,1)=452.2
	aphot(3,1)=0.35112
	aener(4,1)=676.8
	aphot(4,1)=0.127082
	aener(5,1)=776.2
	aphot(5,1)=0.0887775
	aener(6,1)=1011.7
	aphot(6,1)=0.0428925
	aener(7,1)=2984.3
	aphot(7,1)=0.00183341
	aener(8,1)=5414.7
	aphot(8,1)=0.000293265
	aener(9,1)=9886.4
	aphot(9,1)=4.2693e-05
	aener(10,1)=29779
	aphot(10,1)=1.04339e-06

	qaener(2)=13
	athreshold(2)=8.9
	aener(1,2)=10.2
	aphot(1,2)=5.9052
	aener(2,2)=13
	aphot(2,2)=11.97
	aener(3,2)=15
	aphot(3,2)=13.965
	aener(4,2)=21.2
	aphot(4,2)=12.0299
	aener(5,2)=30.5
	aphot(5,2)=6.00495
	aener(6,2)=49.3
	aphot(6,2)=2.0349
	aener(7,2)=72.4
	aphot(7,2)=0.96558
	aener(8,2)=108.5
	aphot(8,2)=0.408975
	aener(9,2)=114
	aphot(9,2)=0.369075
	aener(10,2)=132.8
	aphot(10,2)=0.265335
	aener(11,2)=192.6
	aphot(11,2)=0.112119
	aener(12,2)=220.1
	aphot(12,2)=0.0776055
	aener(13,2)=277
	aphot(13,2)=0.039102

	endif


c	end of computer code


	do ns=1,qash
		athreshold(ns)=athreshold(ns)*1.e-6
		do nae=1,qaener(ns)	
			aener(nae,ns)=aener(nae,ns)*1.e-6
		enddo
	enddo


        if(soo.eq.1)then
	if(qash.eq.0)then
	write(oo,*)' Worning of henke: atom z=',zato,' is not found.'
        write(oo,*)
     +  '  The data will be seached by readPAS, accuracy will be lower.'

	endif
	endif

c	call prishellfi

	end
