CDECK  ID>, TOFH.
      SUBROUTINE TOFH
      IMPLICIT REAL*8 (A-H,O-Z)
       DOUBLE PRECISION ALPHAST,VDST,TSTEP,ZSTEP,TFINAL,ZFINAL
       INTEGER ITFINAL,IPRIM
       COMMON/CION/ALPHAST,VDST,TSTEP,ZSTEP,TFINAL,ZFINAL,ITFINAL,IPRIM
*   Combined /TPLOUT/, /TPLOUTG/, /TPLOUTH/ in a single common.
       DOUBLE PRECISION ETPL,XTPL,YTPL,ZTPL,TTPL,XXTPL,YYTPL,ZZTPL,
     -      YZTPL,XZTPL,XYTPL,VZTPL,VYTPL,VXTPL,ATTOINT,ATTERT,AIOERT
       INTEGER NETPL
       COMMON /TPLOUT/ ETPL(8),XTPL(8),YTPL(8),ZTPL(8),TTPL(8),XXTPL(8),
     -      YYTPL(8),ZZTPL(8),YZTPL(8),XZTPL(8),XYTPL(8),
     -      VZTPL(8),VYTPL(8),VXTPL(8),ATTOINT,ATTERT,AIOERT,NETPL(8)
*   Combined /TOFOUT/, /TOFGOUT/ and /TOFHOUT/ in a single common.
       DOUBLE PRECISION RALPHA,RALPER,TOFENE,TOFENER,TOFWV,TOFWVER,
     -      TOFWVZ,TOFWVZER,TOFWVY,TOFWVYER,TOFWVX,TOFWVXER,
     -      TOFDL,TOFDLER,TOFDT,TOFDTER,TOFWR,TOFWRER,
     -      TOFDZZ,TOFDZZER,TOFDXX,TOFDXXER,TOFDYY,TOFDYYER,
     -      TOFDYZ,TOFDYZER,TOFDXY,TOFDXYER,TOFDXZ,TOFDXZER,
     -      TOFWRZ,TOFWRZER,TOFWRY,TOFWRYER,TOFWRX,TOFWRXER,
     -      RATTOF,RATOFER
       COMMON /TOFHOUT/ RALPHA,RALPER,TOFENE,TOFENER,TOFWV,TOFWVER,
     -      TOFWVZ,TOFWVZER,TOFWVY,TOFWVYER,TOFWVX,TOFWVXER,
     -      TOFDL,TOFDLER,TOFDT,TOFDTER,TOFWR,TOFWRER,
     -      TOFDZZ,TOFDZZER,TOFDXX,TOFDXXER,TOFDYY,TOFDYYER,
     -      TOFDYZ,TOFDYZER,TOFDXY,TOFDXYER,TOFDXZ,TOFDXZER,
     -      TOFWRZ,TOFWRZER,TOFWRY,TOFWRYER,TOFWRX,TOFWRXER,
     -      RATTOF,RATOFER
*   Combined /PTTOF/, /PTTOFG/ and /PTTOFH/ in a single common.
       DOUBLE PRECISION RI,EPT,VZPT,VYPT,VXPT,TTEST
       COMMON /PTTOF/ RI(8),EPT(8),VZPT(8),VYPT(8),VXPT(8),TTEST(8)
*-----------------------------------------------------------------------
*   MAGPAR - Interface parameters for gas mixing with Magboltz.
*   (Last changed on  2/ 3/08.)
*-----------------------------------------------------------------------
       INTEGER MXGNAM
       PARAMETER(MXGNAM=60)
       DOUBLE PRECISION FRAMIX
       LOGICAL LF0PLT,LCSPLT,LGKEEP,LBMCPR
       COMMON /MAGPAR/ FRAMIX(MXGNAM),LF0PLT,LCSPLT,LGKEEP,LBMCPR
       LOGICAL         LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD
       INTEGER LUNOUT,JFAIL,JEXMEM
       COMMON /PRTPLT/ LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD,LUNOUT,JFAIL,JEXMEM
      DIMENSION DZTF(8),DXTF(8),DYTF(8),DYZTF(8),DXYTF(8),DXZTF(8)
      DIMENSION WRZ(8),WRY(8),WRX(8),ANTPL(8)
C----------------------------------------------------------
C CALCULATES TIME OF FLIGHT COEFFICIENTS
C---------------------------------------------
      ANTPL(1)=DBLE(NETPL(1))
      WRZ(1)=ZTPL(1)/(ANTPL(1)*TSTEP)
      WRY(1)=YTPL(1)/(ANTPL(1)*TSTEP)
      WRX(1)=XTPL(1)/(ANTPL(1)*TSTEP)
      DZTF(1)=((ZZTPL(1)/ANTPL(1))-(ZTPL(1)/ANTPL(1))**2)/(2.0D0*TSTEP)
      DXTF(1)=((XXTPL(1)/ANTPL(1))-(XTPL(1)/ANTPL(1))**2)/(2.0D0*TSTEP)
      DYTF(1)=((YYTPL(1)/ANTPL(1))-(YTPL(1)/ANTPL(1))**2)/(2.0D0*TSTEP)
      DYZTF(1)=((YZTPL(1)/ANTPL(1))-(YTPL(1)*ZTPL(1)/(ANTPL(1)**2)))/(2
     /.0D0*TSTEP)
      DXZTF(1)=((XZTPL(1)/ANTPL(1))-(XTPL(1)*ZTPL(1)/(ANTPL(1)**2)))/(2
     /.0D0*TSTEP)
      DXYTF(1)=((XYTPL(1)/ANTPL(1))-(XTPL(1)*YTPL(1)/(ANTPL(1)**2)))/(2
     /.0D0*TSTEP)
      DO 10 I=2,ITFINAL
      ANTPL(I)=DBLE(NETPL(I))
      WRZ(I)=((ZTPL(I)/ANTPL(I))-(ZTPL(I-1)/ANTPL(I-1)))/TSTEP
      WRY(I)=((YTPL(I)/ANTPL(I))-(YTPL(I-1)/ANTPL(I-1)))/TSTEP
      WRX(I)=((XTPL(I)/ANTPL(I))-(XTPL(I-1)/ANTPL(I-1)))/TSTEP
      DZTF(I)=((ZZTPL(I)/ANTPL(I))-(ZTPL(I)/ANTPL(I))**2-(ZZTPL(I-1)/ANT
     /PL(I-1))+(ZTPL(I-1)/ANTPL(I-1))**2)/(2.0D0*TSTEP)
      DXTF(I)=((XXTPL(I)/ANTPL(I))-(XTPL(I)/ANTPL(I))**2-(XXTPL(I-1)/ANT
     /PL(I-1))+(XTPL(I-1)/ANTPL(I-1))**2)/(2.0D0*TSTEP)
      DYTF(I)=((YYTPL(I)/ANTPL(I))-(YTPL(I)/ANTPL(I))**2-(YYTPL(I-1)/ANT
     /PL(I-1))+(YTPL(I-1)/ANTPL(I-1))**2)/(2.0D0*TSTEP)
      DYZTF(I)=((YZTPL(I)/ANTPL(I))-(YTPL(I)*ZTPL(I)/(ANTPL(I)**2))-(YZT
     /PL(I-1)/ANTPL(I-1))+(YTPL(I-1)*ZTPL(I-1)/(ANTPL(I-1)**2)))/(2.0D0*
     /TSTEP)
      DXZTF(I)=((XZTPL(I)/ANTPL(I))-(XTPL(I)*ZTPL(I)/(ANTPL(I)**2))-(XZT
     /PL(I-1)/ANTPL(I-1))+(XTPL(I-1)*ZTPL(I-1)/(ANTPL(I-1)**2)))/(2.0D0*
     /TSTEP)
      DXYTF(I)=((XYTPL(I)/ANTPL(I))-(XTPL(I)*YTPL(I)/(ANTPL(I)**2))-(XYT
     /PL(I-1)/ANTPL(I-1))+(XTPL(I-1)*YTPL(I-1)/(ANTPL(I-1)**2)))/(2.0D0*
     /TSTEP)
  10  CONTINUE
      DO 15 I=1,ITFINAL
      WRZ(I)=WRZ(I)*1.0D+09
      WRY(I)=WRY(I)*1.0D+09
      WRX(I)=WRX(I)*1.0D+09
      DZTF(I)=DZTF(I)*1.0D+16
      DXTF(I)=DXTF(I)*1.0D+16
      DYTF(I)=DYTF(I)*1.0D+16
      DYZTF(I)=DYZTF(I)*1.0D+16
      DXZTF(I)=DXZTF(I)*1.0D+16
      DXYTF(I)=DXYTF(I)*1.0D+16
  15  CONTINUE
      IF(LBMCPR)WRITE(LUNOUT,900) ITFINAL
 900  FORMAT(2(/),' TIME OF FLIGHT RESULTS AT',I2,' SEQUENTIAL TIME PLAN
     /ES',/,'PLANE    DZZ     DXX     DYY     DYZ     DXZ     DXY      W
     /RZ     WRY     WRX',/)
      DO 20 IPL=1,ITFINAL
       IF(LBMCPR)WRITE(LUNOUT,910)
     -      IPL,DZTF(IPL),DXTF(IPL),DYTF(IPL),DYZTF(IPL),
     -      DXZTF(IPL),DXYTF(IPL),WRZ(IPL),WRY(IPL),WRX(IPL)
 910  FORMAT(1X,I2,2X,6F8.1,3F8.2)
  20  CONTINUE
      IF(NETPL(1).GT.NETPL(ITFINAL)) THEN
C        NET ATTACHMENT TAKE RESULTS FROM PLANE 2
       TOFENE=EPT(2)
       TOFENER=100.0D0*ABS((EPT(2)-EPT(3))/(2.0D0*EPT(2)))
       TOFWVZ=VZPT(2)
       TOFWVZER=100.0D0*ABS((VZPT(2)-VZPT(3))/(2.0D0*VZPT(2)))
       TOFWVY=VYPT(2)
       TOFWVYER=100.0D0*ABS((VYPT(2)-VYPT(3))/(2.0D0*VYPT(2)))
       TOFWVX=VXPT(2)
       TOFWVXER=100.0D0*ABS((VXPT(2)-VXPT(3))/(2.0D0*VXPT(2)))
       TOFDZZ=DZTF(2)
       TOFDZZER=100.0D0*ABS((DZTF(2)-DZTF(3))/(2.0D0*DZTF(2)))
       TOFDXX=DXTF(2)
       TOFDXXER=100.0D0*ABS((DXTF(2)-DXTF(3))/(2.0D0*DXTF(2)))
       TOFDYY=DYTF(2)
       TOFDYYER=100.0D0*ABS((DYTF(2)-DYTF(3))/(2.0D0*DYTF(2)))
       TOFDYZ=DYZTF(2)
       TOFDYZER=100.0D0*ABS((DYZTF(2)-DYZTF(3))/(2.0D0*DYZTF(2)))
       TOFDXZ=DXZTF(2)
       TOFDXZER=100.0D0*ABS((DXZTF(2)-DXZTF(3))/(2.0D0*DXZTF(2)))
       TOFDXY=DXYTF(2)
       TOFDXYER=100.0D0*ABS((DXYTF(2)-DXYTF(3))/(2.0D0*DXYTF(2)))
       TOFWRZ=WRZ(2)
       TOFWRY=WRY(2)
       TOFWRX=WRX(2)
       TOFWRZER=100.0D0*ABS((WRZ(2)-WRZ(3))/(2.0D0*WRZ(2)))
       TOFWRYER=100.0D0*ABS((WRY(2)-WRY(3))/(2.0D0*WRY(2)))
       TOFWRXER=100.0D0*ABS((WRX(2)-WRX(3))/(2.0D0*WRX(2)))
        ANST2=DBLE(NETPL(2))
        ANST3=DBLE(NETPL(3))
        ANST4=ANST3-SQRT(ANST3)
        ANST5=LOG(ANST2/ANST3)
        ANST6=LOG(ANST2/ANST4)
        ANST7=ANST6/ANST5
        ANST8=ANST7-1.0D0
       IF(ATTOINT.EQ.-1.0D0) THEN
C        NO IONISATION
        RALPHA=0.0D0
        RALPER=0.0D0
        RATTOF=-RI(2)
        RATOFER=100.0D0*SQRT(ANST8**2+ATTERT**2)
       ELSE
        RALPHA=RI(2)/(1.0D0-ATTOINT)
        RALPER=100.0D0*SQRT(ANST8**2+AIOERT**2)
        RATTOF=ATTOINT*RI(2)/(1.0D0-ATTOINT)
        RATOFER=100.0D0*SQRT(ANST8**2+ATTERT**2)
       ENDIF
      ELSE
C NET IONISATION TAKE RESULTS FROM PLANE ITFINAL
       I1=ITFINAL
       I2=ITFINAL-1
       TOFENE=EPT(I1)
       TOFENER=100.0D0*ABS((EPT(I1)-EPT(I2))/(2.0D0*EPT(I1)))
       TOFWVZ=VZPT(I1)
       TOFWVZER=100.0D0*ABS((VZPT(I1)-VZPT(I2))/(2.0D0*VZPT(I1)))
       TOFWVY=VYPT(I1)
       TOFWVYER=100.0D0*ABS((VYPT(I1)-VYPT(I2))/(2.0D0*VYPT(I1)))
       TOFWVX=VXPT(I1)
       TOFWVXER=100.0D0*ABS((VXPT(I1)-VXPT(I2))/(2.0D0*VXPT(I1)))
       TOFDZZ=DZTF(I1)
       TOFDZZER=100.0D0*ABS((DZTF(I1)-DZTF(I2))/(2.0D0*DZTF(I1)))
       TOFDXX=DXTF(I1)
       TOFDXXER=100.0D0*ABS((DXTF(I1)-DXTF(I2))/(2.0D0*DXTF(I1)))
       TOFDYY=DYTF(I1)
       TOFDYYER=100.0D0*ABS((DYTF(I1)-DYTF(I2))/(2.0D0*DYTF(I1)))
       TOFDYZ=DYZTF(I1)
       TOFDYZER=100.0D0*ABS((DYZTF(I1)-DYZTF(I2))/(2.0D0*DYZTF(I1)))
       TOFDXZ=DXZTF(I1)
       TOFDXZER=100.0D0*ABS((DXZTF(I1)-DXZTF(I2))/(2.0D0*DXZTF(I1)))
       TOFDXY=DXYTF(I1)
       TOFDXYER=100.0D0*ABS((DXYTF(I1)-DXYTF(I2))/(2.0D0*DXYTF(I1)))
       TOFWRZ=WRZ(I1)
       TOFWRY=WRY(I1)
       TOFWRX=WRX(I1)
       TOFWRZER=100.0D0*ABS((WRZ(I1)-WRZ(I2))/(2.0D0*WRZ(I1)))
       TOFWRYER=100.0D0*ABS((WRY(I1)-WRY(I2))/(2.0D0*WRY(I1)))
       TOFWRXER=100.0D0*ABS((WRX(I1)-WRX(I2))/(2.0D0*WRX(I1)))
       ATER=ABS((RI(I1)-RI(I2))/(2.0D0*RI(I1)))
       RALPHA=RI(I1)/(1.0D0-ATTOINT)
       RALPER=100.0D0*SQRT(ATER**2+AIOERT**2)
       RATTOF=ATTOINT*RI(I1)/(1.0D0-ATTOINT)
       IF(ATTOINT.NE.0.0D0) THEN
        RATOFER=100.0D0*SQRT(ATER**2+ATTERT**2)
       ELSE
        RATOFER=0.0D0
       ENDIF
      ENDIF
      END
