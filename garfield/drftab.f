CDECK  ID>, DRFTAB.
       SUBROUTINE DRFTAB
*-----------------------------------------------------------------------
*   DRFTAB - Subroutine calculating and plotting drift lines given an
*            electric field. This routine lets the drift lines start on
*            a grid between (DXMIN,DYMIN) and (DXMAX,DYMAX)
*   VARIABLES : DTT         : The drift time table
*               LCONT       : if .TRUE. plot contours
*               LTABLE      : if .TRUE. print the drift time table
*               CHTS        : used by NAG routine, contour heights
*   (Last changed on  5/11/97.)
*-----------------------------------------------------------------------
       INTEGER MXWIRE,MXSW,MXLIST,MXCHA,MXGRID,MXMATT,MXPOLE,MX3D,
     -         MXPSTR,
     -         MXPAIR,MXPART,MXFOUR,MXCLUS,
     -         MXLINE,MXEQUT,
     -         MXRECL,MXINCH,MXWORD,MXCHAR,MXNAME,MXLUN,
     -         MXINS,MXREG,MXARG,MXCONS,MXVAR,MXALGE,
     -         MXZERO,MXSTCK,MXFPNT,MXFPAR,MXWKLS,
     -         MXHLEV,MXHLRL,MXSUBT,
     -         MXDLVL,MXILVL,MXDLIN,
     -         MXHIST,MXFRAC,MXBANG,MXBTAB,
     -         MXEXG,MXIOG,MXCSG,
     -         MXORIA,
     -         MXMAT,MXEMAT,MXMDIM,
     -         MXSHOT,MXZPAR,
     -         MXMAP,MXEPS,MXWMAP,MXSOLI,MXSBUF,
     -         MXPLAN,MXPOIN,MXEDGE,
     -         MXMCA
       PARAMETER (MXWIRE=  2000,MXSW  =  200)
       PARAMETER (MXMATT=    10)
       PARAMETER (MX3D  =   100)
       PARAMETER (MXPOLE=    10)
       PARAMETER (MXPSTR=   100)
       PARAMETER (MXLIST=  1000)
       PARAMETER (MXHIST=   200, MXCHA = MXLIST/2)
       PARAMETER (MXGRID=    50)
       PARAMETER (MXNAME=   200, MXLUN =    30)
       PARAMETER (MXCLUS=   500, MXPAIR=  2000, MXPART= 10000)
       PARAMETER (MXLINE=   150, MXEQUT=    50)
       PARAMETER (MXFOUR=    16)
       PARAMETER (MXRECL= 10000)
       PARAMETER (MXINCH=  2000, MXWORD=   200, MXCHAR=MXINCH)
       PARAMETER (MXINS =  1000, MXREG =   500, MXCONS=  -500,
     -            MXVAR =   500, MXALGE=   500, MXARG =   100)
       PARAMETER (MXMAT =   500, MXEMAT=200000, MXMDIM=   10)
       PARAMETER (MXZERO=MXWIRE)
       PARAMETER (MXSTCK=     5)
       PARAMETER (MXFPNT= 20000, MXFPAR=    10)
       PARAMETER (MXWKLS=    10)
       PARAMETER (MXHLEV=     9, MXSUBT=   200, MXHLRL=  860)
       PARAMETER (MXDLVL=    10, MXILVL=    20, MXDLIN= 2500)
       PARAMETER (MXFRAC=    13)
       PARAMETER (MXBANG=    20, MXBTAB=    25)
       PARAMETER (MXEXG =    50, MXIOG =    10, MXCSG =  200)
       PARAMETER (MXORIA=  1000)
       PARAMETER (MXSHOT=    10, MXZPAR=4*MXSHOT+2)
       PARAMETER (MXMAP =350000,MXEPS =   10)
       PARAMETER (MXWMAP=     5)
       PARAMETER (MXSOLI=  1000)
       PARAMETER (MXPLAN= 50000, MXPOIN=100000,MXEDGE=100)
       PARAMETER (MXSBUF= 20000)
       PARAMETER (MXMCA = 50000)
*   The parameter MXNBMC must equal MXGNAM (sequence MAGBPARM) !
       INTEGER MXNBMC
       PARAMETER(MXNBMC=60)
       DOUBLE PRECISION WGT,FPRMAT,
     -      FPROJ,FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX,GYBOX,GZBOX
       REAL PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM
       INTEGER NLINED,NGRIDX,NGRIDY,ITRTYP,NTRLIN,NTRSAM,INDPOS,NCTRW,
     -      NTRFLX,NINORD,
     -      NCPNAM,NCXLAB,NCYLAB,NCFPRO,IPRMAT,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,ITFSRM,NTRERR
       LOGICAL LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG,LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       COMMON /PARMS / WGT(MXLIST),FPRMAT(3,3),
     -      FPROJ(3,3),FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX(12),GYBOX(12),GZBOX(12),
     -      PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM,
     -      INDPOS(11000),IPRMAT(3),NCTRW,NCPNAM,
     -      ITRTYP,NTRLIN,NTRSAM,NTRFLX,ITFSRM,NTRERR(10),
     -      NLINED,NINORD,NGRIDX,NGRIDY,NCXLAB,NCYLAB,NCFPRO,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,
     -      LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG(10),LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       CHARACTER*80 PARTID,PXLAB,PYLAB,PROLAB
       CHARACTER*10 PNAME
       CHARACTER*5  PRVIEW
       CHARACTER*(MXCHAR) FCNTRW
       COMMON /PARCHR/ PARTID,FCNTRW,PNAME,PXLAB,PYLAB,PROLAB,PRVIEW
       CHARACTER*80 CELLID
       CHARACTER*3 TYPE
       CHARACTER WIRTYP(MXWIRE),PLATYP(5),
     -      PSLAB1(5,MXPSTR),PSLAB2(5,MXPSTR)
       LOGICAL YNPLAN(4),PERX,PERY,PERZ,YNPLAX,YNPLAY,YNMATX,YNMATY,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,
     -      PERRX,PERRY,PERRZ,CNALSO(MXWIRE),LBGFMP,CELSET,LDIPOL,
     -      BEMSET
       INTEGER INDSW(MXWIRE),NWIRE,NSW,ICTYPE,MODE,NTUBE,MTUBE,
     -      NXMATT,NYMATT,N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA(5),NPSTR1(5),NPSTR2(5),
     -      INDST1(5,MXPSTR),INDST2(5,MXPSTR)
       REAL X(MXWIRE),Y(MXWIRE),V(MXWIRE),E(MXWIRE),D(MXWIRE),W(MXWIRE),
     -      U(MXWIRE),DENS(MXWIRE),
     -      COSPH2(MXWIRE),SINPH2(MXWIRE),AMP2(MXWIRE),
     -      COPLAN(4),VTPLAN(4),XMATT(MXMATT,5),YMATT(MXMATT,5),
     -      X3D(MX3D),Y3D(MX3D),Z3D(MX3D),E3D(MX3D),
     -      DOWN(3),PLSTR1(5,MXPSTR,3),PLSTR2(5,MXPSTR,3),
     -      COTUBE,VTTUBE,B2SIN(MXWIRE),P1,P2,C1,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,
     -      KAPPA
       COMPLEX ZMULT,WMAP(MXWIRE)
       COMMON /CELDAT/ ZMULT,WMAP,X,Y,V,E,D,W,U,DENS,
     -      COSPH2,SINPH2,AMP2,
     -      B2SIN,COPLAN,VTPLAN,XMATT,YMATT,X3D,Y3D,Z3D,E3D,DOWN,
     -      PLSTR1,PLSTR2,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,COTUBE,VTTUBE,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,P1,P2,C1,KAPPA,
     -      INDSW,NWIRE,NSW,ICTYPE,MODE,NXMATT,NYMATT,NTUBE,MTUBE,
     -      N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA,NPSTR1,NPSTR2,INDST1,INDST2,
     -      YNPLAN,YNPLAX,YNPLAY,YNMATX,YNMATY,PERX,PERY,PERZ,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,CNALSO,
     -      PERRX,PERRY,PERRZ,LBGFMP,CELSET,LDIPOL,BEMSET
       COMMON /CELCHR/ CELLID,WIRTYP,PLATYP,TYPE,PSLAB1,PSLAB2
       DOUBLE PRECISION CLSDIS,CLSAVE
       REAL EGAS,VGAS,XGAS,YGAS,DGAS,AGAS,BGAS,HGAS,MGAS,WGAS,OGAS,SGAS,
     -      EXGAS,IOGAS,
     -      CVGAS,CXGAS,CYGAS,CDGAS,CAGAS,CBGAS,CHGAS,CMGAS,CWGAS,COGAS,
     -      CSGAS,CEXGAS,CIOGAS,
     -      VGAS2,XGAS2,YGAS2,DGAS2,AGAS2,BGAS2,HGAS2,MGAS2,WGAS2,OGAS2,
     -      SGAS2,EXGAS2,IOGAS2,
     -      AORIG,AORIG2,PENPRB,PENRMS,PENDT,ENIOG,ENEXG,
     -      BANG,BTAB,
     -      VEXTR1,VEXTR2,VEXTR3,VEXTR4,
     -      XEXTR1,XEXTR2,XEXTR3,XEXTR4,
     -      YEXTR1,YEXTR2,YEXTR3,YEXTR4,
     -      DEXTR1,DEXTR2,DEXTR3,DEXTR4,
     -      AEXTR1,AEXTR2,AEXTR3,AEXTR4,
     -      BEXTR1,BEXTR2,BEXTR3,BEXTR4,
     -      HEXTR1,HEXTR2,HEXTR3,HEXTR4,
     -      MEXTR1,MEXTR2,MEXTR3,MEXTR4,
     -      WEXTR1,WEXTR2,WEXTR3,WEXTR4,
     -      OEXTR1,OEXTR2,OEXTR3,OEXTR4,
     -      SEXTR1,SEXTR2,SEXTR3,SEXTR4,
     -      EEXTR1,EEXTR2,EEXTR3,EEXTR4,
     -      ZEXTR1,ZEXTR2,ZEXTR3,ZEXTR4,
     -      GASRNG,
     -      Z,A,RHO,CMEAN,EMPROB,EPAIR,PGAS,TGAS,GASDEN,
     -      DTION,DLION,GASFRM,ELOSCS
       LOGICAL GASOK,TAB2D,GASOPT,HEEDOK,SRIMOK,TRIMOK,GASSET
       INTEGER NGAS,NCLS,NBANG,NBTAB,NFTAB,NFCLS,
     -      IVMETH,IXMETH,IYMETH,IDMETH,IAMETH,IBMETH,IHMETH,IMMETH,
     -      IWMETH,IOMETH,ISMETH,IEMETH,IZMETH,
     -      IVEXTR,IXEXTR,IYEXTR,IDEXTR,IAEXTR,IBEXTR,IHEXTR,IMEXTR,
     -      IWEXTR,IOEXTR,ISEXTR,IEEXTR,IZEXTR,
     -      JVEXTR,JXEXTR,JYEXTR,JDEXTR,JAEXTR,JBEXTR,JHEXTR,JMEXTR,
     -      JWEXTR,JOEXTR,JSEXTR,JEEXTR,JZEXTR,
     -      IATHR,IBTHR,IHTHR,
     -      NEXGAS,NIOGAS,NCSGAS,ICSTYP
       CHARACTER*80 GASID
       CHARACTER*(MXCHAR) FCNTAB,FCNCLS
       CHARACTER*10 CLSTYP
       CHARACTER*45 DSCEXG(MXEXG),DSCIOG(MXIOG),DSCCSG(MXCSG)
       COMMON /GASDAT/ CLSDIS(MXPAIR),CLSAVE,
     -      EGAS(MXLIST),
     -      VGAS(MXLIST),XGAS(MXLIST),YGAS(MXLIST),WGAS(MXLIST),
     -      DGAS(MXLIST),OGAS(MXLIST),AGAS(MXLIST),BGAS(MXLIST),
     -      HGAS(MXLIST),MGAS(MXLIST),SGAS(MXLIST,6),
     -      EXGAS(MXLIST,MXEXG),IOGAS(MXLIST,MXIOG),
     -      CVGAS(MXLIST),CXGAS(MXLIST),CYGAS(MXLIST),CWGAS(MXLIST),
     -      CDGAS(MXLIST),COGAS(MXLIST),CAGAS(MXLIST),CBGAS(MXLIST),
     -      CHGAS(MXLIST),CMGAS(MXLIST),CSGAS(MXLIST,6),
     -      CEXGAS(MXLIST,MXEXG),CIOGAS(MXLIST,MXIOG),
     -      VGAS2(MXLIST,MXBANG,MXBTAB),WGAS2(MXLIST,MXBANG,MXBTAB),
     -      XGAS2(MXLIST,MXBANG,MXBTAB),YGAS2(MXLIST,MXBANG,MXBTAB),
     -      AGAS2(MXLIST,MXBANG,MXBTAB),BGAS2(MXLIST,MXBANG,MXBTAB),
     -      DGAS2(MXLIST,MXBANG,MXBTAB),OGAS2(MXLIST,MXBANG,MXBTAB),
     -      HGAS2(MXLIST,MXBANG,MXBTAB),MGAS2(MXLIST,MXBANG,MXBTAB),
     -      SGAS2(MXLIST,MXBANG,MXBTAB,6),
     -      EXGAS2(MXLIST,MXBANG,MXBTAB,MXEXG),
     -      IOGAS2(MXLIST,MXBANG,MXBTAB,MXIOG),
     -      AORIG(MXLIST),AORIG2(MXLIST,MXBANG,MXBTAB),
     -      PENPRB(MXEXG),PENRMS(MXEXG),PENDT(MXEXG),
     -      ENIOG(MXIOG),ENEXG(MXEXG),
     -      BANG(MXBANG),BTAB(MXBTAB),
     -      GASRNG(20,2),GASFRM(MXNBMC),ELOSCS(MXCSG),
     -      Z,A,RHO,CMEAN,EMPROB,EPAIR,PGAS,TGAS,GASDEN,
     -      DTION,DLION,
     -      VEXTR1,VEXTR2,VEXTR3,VEXTR4,
     -      XEXTR1,XEXTR2,XEXTR3,XEXTR4,
     -      YEXTR1,YEXTR2,YEXTR3,YEXTR4,
     -      DEXTR1,DEXTR2,DEXTR3,DEXTR4,
     -      AEXTR1,AEXTR2,AEXTR3,AEXTR4,
     -      BEXTR1,BEXTR2,BEXTR3,BEXTR4,
     -      HEXTR1,HEXTR2,HEXTR3,HEXTR4,
     -      MEXTR1,MEXTR2,MEXTR3,MEXTR4,
     -      WEXTR1,WEXTR2,WEXTR3,WEXTR4,
     -      OEXTR1,OEXTR2,OEXTR3,OEXTR4,
     -      SEXTR1(6),SEXTR2(6),SEXTR3(6),SEXTR4(6),
     -      EEXTR1(MXEXG),EEXTR2(MXEXG),EEXTR3(MXEXG),EEXTR4(MXEXG),
     -      ZEXTR1(MXIOG),ZEXTR2(MXIOG),ZEXTR3(MXIOG),ZEXTR4(MXIOG),
     -      IVMETH,IXMETH,IYMETH,IDMETH,IAMETH,IBMETH,IHMETH,IMMETH,
     -      IWMETH,IOMETH,ISMETH,IEMETH,IZMETH,
     -      IVEXTR,IXEXTR,IYEXTR,IDEXTR,IAEXTR,IBEXTR,IHEXTR,IMEXTR,
     -      IWEXTR,IOEXTR,ISEXTR,IEEXTR,IZEXTR,
     -      JVEXTR,JXEXTR,JYEXTR,JDEXTR,JAEXTR,JBEXTR,JHEXTR,JMEXTR,
     -      JWEXTR,JOEXTR,JSEXTR,JEEXTR,JZEXTR,
     -      NGAS,NCLS,NBANG,NBTAB,NFTAB,NFCLS,
     -      IATHR,IBTHR,IHTHR,
     -      NEXGAS,NIOGAS,NCSGAS,ICSTYP(MXCSG),
     -      GASOK(20),GASOPT(20,4),
     -      TAB2D,HEEDOK,SRIMOK,TRIMOK,GASSET
       COMMON /GASCHR/ FCNTAB,FCNCLS,CLSTYP,GASID,DSCEXG,DSCIOG,DSCCSG
       COMPLEX ICONS
       REAL PI,CLOG2,EPS0,ECHARG,EMASS,CLIGHT,MEV2KG,BOLTZ,GRAV
       PARAMETER (PI=3.141592653589793238,
     -      CLOG2=0.693147180559945309417,
     -      ICONS=(0.0,1.0),
     -      EPS0=8.854187817E-14,
     -      ECHARG=1.60217733E-19,
     -      EMASS=9.1093897E-31,
     -      GRAV=9.80665,
     -      CLIGHT=2.99792458E4,
     -      MEV2KG = 1.782661845E-30,
     -      BOLTZ=1.380658E-23)
       REAL USERX0,USERX1,USERY0,USERY1,FRXMIN,FRXMAX,FRYMIN,FRYMAX,
     -      ARRANG,ARRLEN,BARFRC,DISPX0,DISPX1,DISPY0,DISPY1,
     -      GPXN,GPXN10,GPYN,GPYN10,GPXL,GPYL,GPXT
       LOGICAL LGRID,LGRALL,LOGX,LOGY,LSTAMP,LGCLRB,LGCLRA,
     -      LWAITA,LWAITB,LXCCH,LGLCLP,LGMCLP,LGACLP,LGTCLP,
     -      WKMULT(MXWKLS)
       INTEGER NWK,WKID(MXWKLS),WKCON(MXWKLS),WKFREF(MXWKLS),
     -         WKLUN(MXWKLS),WKSTAT(MXWKLS),WKSREQ(MXWKLS),
     -         NCWKNM(MXWKLS),NCSTMP,IGHIST,IGBAR,NCGKS
       CHARACTER*20 WKNAME(MXWKLS),WKATTR(MXWKLS)
       CHARACTER*80 STAMP
       CHARACTER*(MXNAME) GKSLOG
       COMMON /GRADAT/ USERX0,USERX1,USERY0,USERY1,ARRANG,ARRLEN,
     -      BARFRC,
     -      FRXMIN,FRXMAX,FRYMIN,FRYMAX,DISPX0,DISPX1,DISPY0,DISPY1,
     -      GPXN,GPXN10,GPYN,GPYN10,GPXL,GPYL,GPXT,
     -      LGRID,LGRALL,LOGX,LOGY,LSTAMP,LGCLRB,LGCLRA,LWAITA,LWAITB,
     -      LXCCH,LGLCLP,LGMCLP,LGACLP,LGTCLP,
     -      NWK,WKID,WKCON,WKFREF,WKLUN,WKSTAT,WKSREQ,NCWKNM,NCSTMP,
     -      IGHIST,IGBAR,NCGKS,WKMULT
       COMMON /GRACHR/ WKNAME,WKATTR,STAMP,GKSLOG
       LOGICAL         LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD
       INTEGER LUNOUT,JFAIL,JEXMEM
       COMMON /PRTPLT/ LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD,LUNOUT,JFAIL,JEXMEM
       DOUBLE PRECISION XU,YU,ZU,TU,XTARG,YTARG,TMC,DMC
       REAL DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,DTARG,EPSDFI,EPSTWI,
     -      EPSATI,RDF2,DSCMIN,DSCMAX,DTFACT,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,EPSDIF,RTRAP,
     -      STMAX,EQTTHR,EQTASP,EQTCLS,QPCHAR
       INTEGER NU,ISTAT,ITARG,MXDIFS,MXTWNS,MXATTS,MDF2,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,
     -      IPTYPE,IPTECH
       LOGICAL LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       COMMON /DRFDAT/ XU(MXLIST),YU(MXLIST),ZU(MXLIST),TU(MXLIST),
     -      XTARG,YTARG,TMC,DMC,DTARG,
     -      DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,
     -      EQTTHR,EQTASP,EQTCLS,QPCHAR,
     -      RTRAP,STMAX,EPSDIF,EPSDFI,EPSTWI,EPSATI,RDF2,DSCMIN,DSCMAX,
     -      DTFACT,MDF2,
     -      MXDIFS,MXTWNS,MXATTS,
     -      NU,ISTAT,ITARG,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,IPTYPE,
     -      IPTECH,LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       CHARACTER*80 STATUS
       LOGICAL LCONT,LTABLE
       INTEGER NC,ITYPE
       REAL Q,XSTART,YSTART
       REAL DTT,PAR,DUM
       COMMON /MATRIX/ DTT(MXWIRE,MXWIRE),PAR(37),
     -      DUM(MXWIRE**2+8*MXWIRE-31)
       SAVE ITYPE,Q,LCONT,LTABLE
*** Preset the charge, particle type and the output options.
       DATA ITYPE /      1/
       DATA Q     /   -1.0/
       DATA LCONT /.FALSE./
       DATA LTABLE/ .TRUE./
*** Define some formats.
1070   FORMAT('1DRIFT-TABLE',110X,'PART ',I1,'.',I1/122X,'========'//
     -        ' Y        X:',10(E11.4,1X:))
1075   FORMAT('1DRIFT-TABLE',110X,'PART ',I1,'.',I1/122X,'========'//
     -        ' Phi      R:',10(E11.4,1X:))
1080   FORMAT('1 List of drift lines used for the table:',/,
     -        '  ======================================',//,
     -        '    x-start    y-start     steps   drift time',
     -        '  remarks',/,
     -        '       [cm]      [cm]            [microsec]'//)
1085   FORMAT('1 List of drift lines used for the table:',/,
     -        '  ======================================',//,
     -        '    r-start  phi-start     steps   drift time',
     -        '  remarks',/,
     -        '       [cm] [degrees]            [microsec]'//)
*** Print a heading, if requested.
       IF(LIDENT)PRINT *,' /// ROUTINE DRFTAB ///'
*** Have a look at the input string
       CALL INPNUM(NWORD)
       DO 10 I=2,NWORD
       IF(INPCMP(I,'NOCONT#OUR').NE.0)THEN
            LCONT=.FALSE.
       ELSEIF(INPCMP(I,'CONT#OUR').NE.0)THEN
            LCONT=.TRUE.
       ELSEIF(INPCMP(I,'NOTAB#LE').NE.0)THEN
            LTABLE=.FALSE.
       ELSEIF(INPCMP(I,'TAB#LE').NE.0)THEN
            LTABLE=.TRUE.
       ELSEIF(INPCMP(I,'I#ON').NE.0)THEN
            IF(GASOK(2))THEN
                 ITYPE=2
                 Q=+1
            ELSE
                 CALL INPMSG(I,'ion mobility data missing.    ')
            ENDIF
       ELSEIF(INPCMP(I,'E#LECTRON').NE.0)THEN
            ITYPE=1
            Q=-1
       ELSEIF(INPCMP(I,'POS#ITIVE').NE.0)THEN
            Q=+1
       ELSEIF(INPCMP(I,'NEG#ATIVE').NE.0)THEN
            Q=-1
       ELSE
            CALL INPMSG(I,'the option is not known.      ')
       ENDIF
10     CONTINUE
       CALL INPERR
*** Make sure there is at least some output.
       IF(.NOT.(LTABLE.OR.LCONT))THEN
            PRINT *,' !!!!!! DRFTAB WARNING : Neither TABLE nor'//
     -           ' CONTOUR output requested; routine not executed.'
            RETURN
       ENDIF
*** Allocate storage for the matrix.
       CALL BOOK('BOOK','MATRIX','DTT',IFAIL)
       IF(IFAIL.NE.0)THEN
            PRINT *,' !!!!!! DRFTAB WARNING : Unable to allocate'//
     -           ' storage for the drift time table.'
            PRINT *,'                         Neither the table'//
     -           ' nor the plot will be made.'
            RETURN
       ENDIF
*** Print a heading for the table, depending on the coordinate system.
       IF(LDRPRT)THEN
            IF(.NOT.POLAR)WRITE(LUNOUT,1080)
            IF(POLAR)WRITE(LUNOUT,1085)
       ENDIF
*** Prepare a plot (layout, frame number etc).
       IF(LDRPLT)THEN
            CALL GRAXIS(DXMIN,DYMIN,DXMAX,DYMAX,
     -           'DRIFT LINES FOR A DRIFT TIME TABLE      ')
            CALL CELLAY(DXMIN,DYMIN,DXMAX,DYMAX)
            IF(CELLID.NE.' ')CALL GRCOMM(1,'Cell: '//CELLID)
            IF(GASID.NE.' ')CALL GRCOMM(2,'Gas: '//GASID)
            CALL GRCOMM(3,'Drifting: electrons')
            CALL GRALOG('Drift lines for timing table.           ')
       ENDIF
*** Start drift lines from all over the grid,
       DO 20 I=1,NGRIDX
       DO 30 J=1,NGRIDY
       IF(POLAR)THEN
            XSTART=LOG(EXP(DXMIN)+REAL(I-1)*(EXP(DXMAX)-EXP(DXMIN))/
     -           REAL(NGRIDX-1))
       ELSE
            XSTART=DXMIN+REAL(I-1)*(DXMAX-DXMIN)/REAL(NGRIDX-1)
       ENDIF
       YSTART=DYMIN+REAL(J-1)*(DYMAX-DYMIN)/REAL(NGRIDY-1)
*   calculate the drift line starting at (XSTART,YSTART),
       CALL DLCALC(XSTART,YSTART,0.0,Q,ITYPE)
*   and store the drift time in an array,
       DTT(I,J)=TU(NU)
*   print information on this drift line if requested,
       IF(LDRPRT)THEN
            IF(POLAR)CALL CFMRTP(XSTART,YSTART,XSTART,YSTART,1)
            CALL DLCSTF(ISTAT,STATUS,NC)
            WRITE(LUNOUT,'(1X,F10.3,1X,F10.3,I10,1X,E12.5,2X,A)')
     -           XSTART,YSTART,NU,TU(NU),STATUS(1:NC)
       ENDIF
*   and plot the drift line obtained - if this is requested.
       IF(LDRPLT.AND.NU.GT.1)THEN
            IF(POLAR)CALL CF2RTC(XU,YU,XU,YU,NU)
            IF(NU.GT.1)CALL GPL2(NU,XU,YU)
       ENDIF
30     CONTINUE
20     CONTINUE
*** Clear the screen if the drift lines have been plotted.
       IF(LDRPLT)CALL GRNEXT
*** Print the table just obtained, if requested.
       IF(LTABLE)THEN
            DO 110 JJ=0,10*INT(REAL(NGRIDY-1)/10.0),10
            JMAX=MIN(NGRIDY-JJ,10)
            DO 120 II=0,10*INT(REAL(NGRIDX-1)/10.0),10
            IMAX=MIN(NGRIDX-II,10)
            IF(.NOT.POLAR)THEN
                 WRITE(LUNOUT,1070) 1+II/10,1+JJ/10,
     -                (DXMIN+(DXMAX-DXMIN)*REAL(II+I-1)/REAL(NGRIDX-1),
     -                I=1,IMAX)
            ELSE
                 WRITE(LUNOUT,1075) 1+II/10,1+JJ/10,(EXP(DXMIN)+
     -                (EXP(DXMAX)-EXP(DXMIN))*REAL(II+I-1)/
     -                REAL(NGRIDX-1),I=1,IMAX)
            ENDIF
            WRITE(LUNOUT,'('' '')')
            DO 130 J=1,JMAX
            YPOS=DYMIN+(DYMAX-DYMIN)*REAL(JJ+J-1)/REAL(NGRIDY-1)
            IF(POLAR)THEN
                 WRITE(LUNOUT,'(1X,E10.3)') YPOS*180.0/PI
            ELSE
                 WRITE(LUNOUT,'(1X,E10.3)') YPOS
            ENDIF
            WRITE(LUNOUT,'(12X,10(E11.4,1X:))')
     -           (REAL(DTT(II+I,JJ+J)),I=1,IMAX)
130         CONTINUE
120         CONTINUE
110         CONTINUE
       ENDIF
       IF(LCONT)THEN
*   Check that the surface is not flat.
            IFLAT=1
            CZMIN=DTT(1,1)
            CZMAX=DTT(1,1)
            DO 80 ICHK=1,NGRIDX
            DO 70 JCHK=1,NGRIDY
            IF(ABS(DTT(ICHK,JCHK)-DTT(1,1)).GT.1.0E-5*
     -           (1.0+ABS(DTT(ICHK,JCHK))+ABS(DTT(1,1))))IFLAT=0
            CZMIN=MIN(CZMIN,DTT(1,1))
            CZMAX=MAX(CZMAX,DTT(1,1))
70          CONTINUE
80          CONTINUE
            IF(IFLAT.NE.0)THEN
                 PRINT *,' !!!!!! DRFTAB WARNING : Contours not'//
     -                ' not plotted, all values identical.'
                 GOTO 90
            ENDIF
*   Switch the screen to graphics mode.
            CALL GRGRAF(.TRUE.)
*   Fill the PAR vector.
            PAR(1)=20
            PAR(2)=0
            PAR(3)=DXMIN
            PAR(4)=DXMAX
            PAR(5)=DYMIN
            PAR(6)=DYMAX
            PAR(7)=CZMIN
            PAR(8)=CZMAX
            PAR(9)=1000+NGRIDX
            PAR(10)=1000+NGRIDY
*   Plot a frame for the contours.
            IF(.NOT.POLAR)THEN
                 CALL GRAXIS(DXMIN,DYMIN,DXMAX,DYMAX,
     -                'CONTOURS OF THE DRIFT TIME              ')
                 CALL CELLAY(DXMIN,DYMIN,DXMAX,DYMAX)
                 PAR(3)=DXMIN
                 PAR(4)=DXMAX
                 PAR(5)=DYMIN
                 PAR(6)=DYMAX
            ELSE
                 CALL CFMRTP(DXMIN,DYMIN,DXMINP,DYMINP,1)
                 CALL CFMRTP(DXMAX,DYMAX,DXMAXP,DYMAXP,1)
                 CALL GRCART(DXMINP,DYMINP,DXMAXP,DYMAXP,
     -                '                    Radial distance [cm]',
     -                '                         Angle [degrees]',
     -                'CONTOURS OF THE DRIFT TIME              ')
                 PAR(3)=DXMINP
                 PAR(4)=DXMAXP
                 PAR(5)=DYMINP
                 PAR(6)=DYMAXP
            ENDIF
*   Plot the contours.
            CALL ISVP(1,DISPX0+0.1,DISPX1-0.1,
     -           DISPY0+0.1,DISPY1-0.1)
            CALL ISWN(1,0.0,1.0,0.0,1.0)
            CALL ISELNT(1)
            CALL IGTABL(MXWIRE,MXWIRE,DTT,10,PAR,'C')
*   Close the plot.
            CALL GRNEXT
*   Record what happened.
            CALL GRALOG('Drift time table contours.')
*   Continue here in case of a flat function.
90          CONTINUE
       ENDIF
*** Deallocate the matrix.
       CALL BOOK('RELEASE','MATRIX','DTT',IFAIL)
*** Register the amount of CPU time used for calculating drift lines.
       CALL TIMLOG('Drift lines for timing table:           ')
       END
