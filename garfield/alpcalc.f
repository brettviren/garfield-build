CDECK  ID>, ALPCALC.
       SUBROUTINE ALPCALC(IFAIL)
*-----------------------------------------------------------------------
*   ALPCALC - Estimate time step and space steps for avalanche
*             simulation in time of flight and steady state townsend
*             simulations. Uses estimated gain of 3.0 between planes.
*             Calls SST and TOF subroutines and updates ALPHA and ATT.
*   Author: Steve Biagi, minor modifications.
*   (Last changed on 21/ 9/05.)
*-----------------------------------------------------------------------
       implicit none
       DOUBLE PRECISION TMAX,SMALL,API,ESTART,THETA,PHI,TCFMAX,RSTART,
     -      EMAG
       INTEGER NMAX
       COMMON/SETP/TMAX,SMALL,API,ESTART,THETA,PHI,TCFMAX(8),RSTART,
     -      EMAG,NMAX
       DOUBLE PRECISION VDOUT,VDERR,WSOUT,WSERR,DLOUT,DLERR,DTOUT,DTERR,
     -      ALPHSST,ALPHERR,ATTSST,ATTERR
       COMMON/SSTOUT/VDOUT,VDERR,WSOUT,WSERR,DLOUT,DLERR,DTOUT,DTERR,
     -      ALPHSST,ALPHERR,ATTSST,ATTERR
*   Combined /TOFOUT/, /TOFGOUT/ and /TOFHOUT/ in a single common.
       DOUBLE PRECISION RALPHA,RALPER,TOFENE,TOFENER,TOFWV,TOFWVER,
     -      TOFWVZ,TOFWVZER,TOFWVY,TOFWVYER,TOFWVX,TOFWVXER,
     -      TOFDL,TOFDLER,TOFDT,TOFDTER,TOFWR,TOFWRER,
     -      TOFDZZ,TOFDZZER,TOFDXX,TOFDXXER,TOFDYY,TOFDYYER,
     -      TOFDYZ,TOFDYZER,TOFDXY,TOFDXYER,TOFDXZ,TOFDXZER,
     -      TOFWRZ,TOFWRZER,TOFWRY,TOFWRYER,TOFWRX,TOFWRXER,
     -      RATTOF,RATOFER
       COMMON /TOFHOUT/ RALPHA,RALPER,TOFENE,TOFENER,TOFWV,TOFWVER,
     -      TOFWVZ,TOFWVZER,TOFWVY,TOFWVYER,TOFWVX,TOFWVXER,
     -      TOFDL,TOFDLER,TOFDT,TOFDTER,TOFWR,TOFWRER,
     -      TOFDZZ,TOFDZZER,TOFDXX,TOFDXXER,TOFDYY,TOFDYYER,
     -      TOFDYZ,TOFDYZER,TOFDXY,TOFDXYER,TOFDXZ,TOFDXZER,
     -      TOFWRZ,TOFWRZER,TOFWRY,TOFWRYER,TOFWRX,TOFWRXER,
     -      RATTOF,RATOFER
       DOUBLE PRECISION ALPHA,ATT
       COMMON /CTOWNS/ ALPHA,ATT
       DOUBLE PRECISION ALPER,ATTER
       COMMON /CTWNER/ ALPER,ATTER
       DOUBLE PRECISION DXXER,DYYER,DZZER,DYZER,DXYER,DXZER
       COMMON /DIFERB/ DXXER,DYYER,DZZER,DYZER,DXYER,DXZER
       DOUBLE PRECISION DFLER,DFTER
       COMMON /DIFERL/ DFLER,DFTER
       DOUBLE PRECISION DIFXX,DIFYY,DIFZZ,DIFYZ,DIFXY,DIFXZ
       COMMON /DIFLAB/ DIFXX,DIFYY,DIFZZ,DIFYZ,DIFXY,DIFXZ
       DOUBLE PRECISION DIFLN,DIFTR
       COMMON /DIFVEL/ DIFLN,DIFTR
       DOUBLE PRECISION WX,WY,WZ
       COMMON /VEL/ WX,WY,WZ
       DOUBLE PRECISION DWX,DWY,DWZ
       COMMON /VELERR/ DWX,DWY,DWZ
       DOUBLE PRECISION ZPLANE1,ZPLANE2,ZPLANE3,ZPLANE4,ZPLANE5,ZPLANE6,
     -      ZPLANE7,ZPLANE8
       INTEGER IZFINAL
       COMMON/CTCALC/ZPLANE1,ZPLANE2,ZPLANE3,ZPLANE4,ZPLANE5,ZPLANE6,
     -      ZPLANE7,ZPLANE8,IZFINAL
       DOUBLE PRECISION ALPHAST,VDST,TSTEP,ZSTEP,TFINAL,ZFINAL
       INTEGER ITFINAL,IPRIM
       COMMON/CION/ALPHAST,VDST,TSTEP,ZSTEP,TFINAL,ZFINAL,ITFINAL,IPRIM
*-----------------------------------------------------------------------
*   MAGPAR - Interface parameters for gas mixing with Magboltz.
*   (Last changed on  2/ 3/08.)
*-----------------------------------------------------------------------
       INTEGER MXGNAM
       PARAMETER(MXGNAM=60)
       DOUBLE PRECISION FRAMIX
       LOGICAL LF0PLT,LCSPLT,LGKEEP,LBMCPR
       COMMON /MAGPAR/ FRAMIX(MXGNAM),LF0PLT,LCSPLT,LGKEEP,LBMCPR
       LOGICAL         LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD
       INTEGER LUNOUT,JFAIL,JEXMEM
       COMMON /PRTPLT/ LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD,LUNOUT,JFAIL,JEXMEM
       INTEGER IMAX,IFAIL
       DOUBLE PRECISION ZSTEPM,WRZN,FC1,FC2,ALPTEST
*** Assume that this will work.
       IFAIL=0
*** Modify the NMAX parameter if too small.
      IMAX=NMAX/10000000
      IF(IMAX.LT.5) IMAX=5
      NMAX=IMAX*10000000
      ALPHAST=0.85D0*ABS(ALPHA-ATT)
      VDST=WZ*1.D-5
      TSTEP=LOG(3.0D0)/(ALPHAST*VDST*1.0D5)
      ZSTEP=LOG(3.0D0)/ALPHAST
*** Convert to metres and picoseconds
      TSTEP=TSTEP*1.0D12
      ZSTEP=ZSTEP*0.01D0
      TFINAL=7.0D0*TSTEP
      ITFINAL=7
      ZFINAL=8.0D0*ZSTEP
      IZFINAL=8
      ZPLANE1=ZSTEP
      ZPLANE2=2.0D0*ZSTEP
      ZPLANE3=3.0D0*ZSTEP
      ZPLANE4=4.0D0*ZSTEP
      ZPLANE5=5.0D0*ZSTEP
      ZPLANE6=6.0D0*ZSTEP
      ZPLANE7=7.0D0*ZSTEP
      ZPLANE8=8.0D0*ZSTEP
*** Calc sst
      IF(LBMCPR)WRITE(LUNOUT,11)
   11 FORMAT(/,2X,'SOLUTION FOR STEADY STATE TOWNSEND PARAMETERS',/,'  -
     /------------------------------------------------')
      ZSTEPM=ZSTEP*1.0D6
      IF(LBMCPR)WRITE(LUNOUT,12) ZSTEPM
   12 FORMAT(1(/),' SPACE STEP BETWEEN SAMPLING PLANES =',D12.5,' MICRON
     /S.',/)
      CALL MONTEFD(IFAIL)
      IF(IFAIL.NE.0)THEN
           PRINT *,' !!!!!! ALPCALC WARNING: Failure in MONTEFD;'//
     -          ' no further calculations.'
           RETURN
      ENDIF
      CALL SST
*** Load new alpha and attachment into common blocks
      ALPHA=ALPHSST
      ALPER=ALPHERR
      ATT=ATTSST
      ATTER=ATTERR
C-----------------------------------------------
      IF(LBMCPR)WRITE(LUNOUT,18)
   18 FORMAT(/,' SST DRIFT VELOCITIES')
      IF(LBMCPR)WRITE(LUNOUT,19) VDOUT,VDERR,WSOUT,WSERR
   19 FORMAT(/,' VD=',F9.1,' +- ',F6.2,' %   WS=',F9.1,' +- ',F6.2,' %')
      IF(LBMCPR)WRITE(LUNOUT,20)
   20 FORMAT(/,' SST DIFFUSION')
      IF(LBMCPR)WRITE(LUNOUT,21) DLOUT,DLERR,DTOUT,DTERR
   21 FORMAT(/,' DL=',F9.1,' +- ',F6.1,' %   DT=',F9.1,' +- ',F6.2,' %')
      IF(LBMCPR)WRITE(LUNOUT,22)
   22 FORMAT(/,' SST TOWNSEND COEFICIENTS')
      IF(LBMCPR)WRITE(LUNOUT,23) ALPHSST,ALPHERR,ATTSST,ATTERR
   23 FORMAT(/,' ALPHA=',F9.1,' +- ',F6.2,' %    ATT=',F9.1,' +- ',F6.2,
     /' %')
*** Calc time of flight and pt
      IF(LBMCPR)WRITE(LUNOUT,25)
   25 FORMAT(/,2X,'SOLUTION FOR PULSED TOWNSEND AND TIME OF FLIGHT PARAM
     /ETERS',/,'  ------------------------------------------------------
     /--------')
      IF(LBMCPR)WRITE(LUNOUT,26) TSTEP
   26 FORMAT(1(/),'  TIME STEP BETWEEN SAMPLING PLANES =',D12.5,' PICOSE
     /CS.',/)
      CALL MONTEFT(IFAIL)
      IF(IFAIL.NE.0)THEN
           PRINT *,' !!!!!! ALPCALC WARNING: Failure in MONTEFT;'//
     -          ' no further calculations.'
           RETURN
      ENDIF
      CALL FRIEDLAND
      CALL PT
      CALL TOF
      IF(LBMCPR)WRITE(LUNOUT,27) RALPHA,RALPER,RATTOF,RATOFER
   27 FORMAT(/,' PT IONISATION AND ATTACHMENT RATES *10**12/SEC',/,' ALP
     /HA=',D10.3,' +- ',F6.2,' %      ATT=',D10.3,' +- ',F6.2,' %')
      IF(LBMCPR)WRITE(LUNOUT,28)
   28 FORMAT(/,' TOF DIFFUSION')
      IF(LBMCPR)WRITE(LUNOUT,29) TOFDL,TOFDLER,TOFDT,TOFDTER
   29 FORMAT(/,'  DL=',F8.1,' +- ',F6.1,' %       DT=',F8.1,' +- ',F6.1,
     /' %')
      IF(LBMCPR)WRITE(LUNOUT,30)
   30 FORMAT(/,' TOF DRIFT VELOCITY')
      IF(LBMCPR)WRITE(LUNOUT,31) TOFWR,TOFWRER
   31 FORMAT(/,'    WR=',F8.2,' +-',F6.1,' %')
      WRZN=TOFWR*1.0D05
      FC1=WRZN/(2.0D0*TOFDL)
      FC2=((RALPHA-RATTOF)*1.0D12)/TOFDL
      ALPTEST=FC1-SQRT(FC1**2-FC2)
      IF(LBMCPR)WRITE(LUNOUT,888) ALPTEST
  888 FORMAT(/,'TOWNSEND COEFICIENT (ALPHA-ATT) CALCULATED FROM TOF RESU
     /LTS:',/,' ALPHA-ATT /CM.=',D11.4)
      END
