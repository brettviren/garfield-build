CDECK  ID>, OPTFUN.
       SUBROUTINE OPTFUN(PNT,AFIT,VALUE)
*-----------------------------------------------------------------------
*   OPTFUN - Function returning the value of the field function at the
*            position corresponding to PNT (integer code).
*   (Last changed on 13/12/07.)
*-----------------------------------------------------------------------
       implicit none
       INTEGER MXWIRE,MXSW,MXLIST,MXCHA,MXGRID,MXMATT,MXPOLE,MX3D,
     -         MXPSTR,
     -         MXPAIR,MXPART,MXFOUR,MXCLUS,
     -         MXLINE,MXEQUT,
     -         MXRECL,MXINCH,MXWORD,MXCHAR,MXNAME,MXLUN,
     -         MXINS,MXREG,MXARG,MXCONS,MXVAR,MXALGE,
     -         MXZERO,MXSTCK,MXFPNT,MXFPAR,MXWKLS,
     -         MXHLEV,MXHLRL,MXSUBT,
     -         MXDLVL,MXILVL,MXDLIN,
     -         MXHIST,MXFRAC,MXBANG,MXBTAB,
     -         MXEXG,MXIOG,MXCSG,
     -         MXORIA,
     -         MXMAT,MXEMAT,MXMDIM,
     -         MXSHOT,MXZPAR,
     -         MXMAP,MXEPS,MXWMAP,MXSOLI,MXSBUF,
     -         MXPLAN,MXPOIN,MXEDGE,
     -         MXMCA
       PARAMETER (MXWIRE=  2000,MXSW  =  200)
       PARAMETER (MXMATT=    10)
       PARAMETER (MX3D  =   100)
       PARAMETER (MXPOLE=    10)
       PARAMETER (MXPSTR=   100)
       PARAMETER (MXLIST=  1000)
       PARAMETER (MXHIST=   200, MXCHA = MXLIST/2)
       PARAMETER (MXGRID=    50)
       PARAMETER (MXNAME=   200, MXLUN =    30)
       PARAMETER (MXCLUS=   500, MXPAIR=  2000, MXPART= 10000)
       PARAMETER (MXLINE=   150, MXEQUT=    50)
       PARAMETER (MXFOUR=    16)
       PARAMETER (MXRECL= 10000)
       PARAMETER (MXINCH=  2000, MXWORD=   200, MXCHAR=MXINCH)
       PARAMETER (MXINS =  1000, MXREG =   500, MXCONS=  -500,
     -            MXVAR =   500, MXALGE=   500, MXARG =   100)
       PARAMETER (MXMAT =   500, MXEMAT=200000, MXMDIM=   10)
       PARAMETER (MXZERO=MXWIRE)
       PARAMETER (MXSTCK=     5)
       PARAMETER (MXFPNT= 20000, MXFPAR=    10)
       PARAMETER (MXWKLS=    10)
       PARAMETER (MXHLEV=     9, MXSUBT=   200, MXHLRL=  860)
       PARAMETER (MXDLVL=    10, MXILVL=    20, MXDLIN= 2500)
       PARAMETER (MXFRAC=    13)
       PARAMETER (MXBANG=    20, MXBTAB=    25)
       PARAMETER (MXEXG =    50, MXIOG =    10, MXCSG =  200)
       PARAMETER (MXORIA=  1000)
       PARAMETER (MXSHOT=    10, MXZPAR=4*MXSHOT+2)
       PARAMETER (MXMAP =350000,MXEPS =   10)
       PARAMETER (MXWMAP=     5)
       PARAMETER (MXSOLI=  1000)
       PARAMETER (MXPLAN= 50000, MXPOIN=100000,MXEDGE=100)
       PARAMETER (MXSBUF= 20000)
       PARAMETER (MXMCA = 50000)
*   The parameter MXNBMC must equal MXGNAM (sequence MAGBPARM) !
       INTEGER MXNBMC
       PARAMETER(MXNBMC=60)
       CHARACTER*80 CELLID
       CHARACTER*3 TYPE
       CHARACTER WIRTYP(MXWIRE),PLATYP(5),
     -      PSLAB1(5,MXPSTR),PSLAB2(5,MXPSTR)
       LOGICAL YNPLAN(4),PERX,PERY,PERZ,YNPLAX,YNPLAY,YNMATX,YNMATY,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,
     -      PERRX,PERRY,PERRZ,CNALSO(MXWIRE),LBGFMP,CELSET,LDIPOL,
     -      BEMSET
       INTEGER INDSW(MXWIRE),NWIRE,NSW,ICTYPE,MODE,NTUBE,MTUBE,
     -      NXMATT,NYMATT,N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA(5),NPSTR1(5),NPSTR2(5),
     -      INDST1(5,MXPSTR),INDST2(5,MXPSTR)
       REAL X(MXWIRE),Y(MXWIRE),V(MXWIRE),E(MXWIRE),D(MXWIRE),W(MXWIRE),
     -      U(MXWIRE),DENS(MXWIRE),
     -      COSPH2(MXWIRE),SINPH2(MXWIRE),AMP2(MXWIRE),
     -      COPLAN(4),VTPLAN(4),XMATT(MXMATT,5),YMATT(MXMATT,5),
     -      X3D(MX3D),Y3D(MX3D),Z3D(MX3D),E3D(MX3D),
     -      DOWN(3),PLSTR1(5,MXPSTR,3),PLSTR2(5,MXPSTR,3),
     -      COTUBE,VTTUBE,B2SIN(MXWIRE),P1,P2,C1,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,
     -      KAPPA
       COMPLEX ZMULT,WMAP(MXWIRE)
       COMMON /CELDAT/ ZMULT,WMAP,X,Y,V,E,D,W,U,DENS,
     -      COSPH2,SINPH2,AMP2,
     -      B2SIN,COPLAN,VTPLAN,XMATT,YMATT,X3D,Y3D,Z3D,E3D,DOWN,
     -      PLSTR1,PLSTR2,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,COTUBE,VTTUBE,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,P1,P2,C1,KAPPA,
     -      INDSW,NWIRE,NSW,ICTYPE,MODE,NXMATT,NYMATT,NTUBE,MTUBE,
     -      N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA,NPSTR1,NPSTR2,INDST1,INDST2,
     -      YNPLAN,YNPLAX,YNPLAY,YNMATX,YNMATY,PERX,PERY,PERZ,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,CNALSO,
     -      PERRX,PERRY,PERRZ,LBGFMP,CELSET,LDIPOL,BEMSET
       COMMON /CELCHR/ CELLID,WIRTYP,PLATYP,TYPE,PSLAB1,PSLAB2
       DOUBLE PRECISION A
       COMMON /MATRIX/ A(MXWIRE+1,MXWIRE+3)
       CHARACTER*(MXCHAR) FUNFLD,FUNPOS,FUNWGT
       CHARACTER*10 VALTYP,PNTTYP
       REAL VST(MXWIRE),VPLST(5)
       LOGICAL EVALT,EVALD,EVALA
       INTEGER NPOINT,NSWIRE,IOPT,NFLD,NPOS,NWGT,IENFLD,IENPOS,IENWGT
       COMMON /OPTDAT/ VST,VPLST,NPOINT,NSWIRE,IOPT,NFLD,NPOS,NWGT,
     -      IENFLD,IENPOS,IENWGT,EVALT,EVALD,EVALA
       COMMON /OPTCHR/ FUNFLD,FUNPOS,FUNWGT,VALTYP,PNTTYP
       DOUBLE PRECISION WGT,FPRMAT,
     -      FPROJ,FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX,GYBOX,GZBOX
       REAL PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM
       INTEGER NLINED,NGRIDX,NGRIDY,ITRTYP,NTRLIN,NTRSAM,INDPOS,NCTRW,
     -      NTRFLX,NINORD,
     -      NCPNAM,NCXLAB,NCYLAB,NCFPRO,IPRMAT,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,ITFSRM,NTRERR
       LOGICAL LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG,LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       COMMON /PARMS / WGT(MXLIST),FPRMAT(3,3),
     -      FPROJ(3,3),FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX(12),GYBOX(12),GZBOX(12),
     -      PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM,
     -      INDPOS(11000),IPRMAT(3),NCTRW,NCPNAM,
     -      ITRTYP,NTRLIN,NTRSAM,NTRFLX,ITFSRM,NTRERR(10),
     -      NLINED,NINORD,NGRIDX,NGRIDY,NCXLAB,NCYLAB,NCFPRO,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,
     -      LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG(10),LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       CHARACTER*80 PARTID,PXLAB,PYLAB,PROLAB
       CHARACTER*10 PNAME
       CHARACTER*5  PRVIEW
       CHARACTER*(MXCHAR) FCNTRW
       COMMON /PARCHR/ PARTID,FCNTRW,PNAME,PXLAB,PYLAB,PROLAB,PRVIEW
       COMPLEX ICONS
       REAL PI,CLOG2,EPS0,ECHARG,EMASS,CLIGHT,MEV2KG,BOLTZ,GRAV
       PARAMETER (PI=3.141592653589793238,
     -      CLOG2=0.693147180559945309417,
     -      ICONS=(0.0,1.0),
     -      EPS0=8.854187817E-14,
     -      ECHARG=1.60217733E-19,
     -      EMASS=9.1093897E-31,
     -      GRAV=9.80665,
     -      CLIGHT=2.99792458E4,
     -      MEV2KG = 1.782661845E-30,
     -      BOLTZ=1.380658E-23)
       DOUBLE PRECISION XU,YU,ZU,TU,XTARG,YTARG,TMC,DMC
       REAL DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,DTARG,EPSDFI,EPSTWI,
     -      EPSATI,RDF2,DSCMIN,DSCMAX,DTFACT,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,EPSDIF,RTRAP,
     -      STMAX,EQTTHR,EQTASP,EQTCLS,QPCHAR
       INTEGER NU,ISTAT,ITARG,MXDIFS,MXTWNS,MXATTS,MDF2,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,
     -      IPTYPE,IPTECH
       LOGICAL LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       COMMON /DRFDAT/ XU(MXLIST),YU(MXLIST),ZU(MXLIST),TU(MXLIST),
     -      XTARG,YTARG,TMC,DMC,DTARG,
     -      DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,
     -      EQTTHR,EQTASP,EQTCLS,QPCHAR,
     -      RTRAP,STMAX,EPSDIF,EPSDFI,EPSTWI,EPSATI,RDF2,DSCMIN,DSCMAX,
     -      DTFACT,MDF2,
     -      MXDIFS,MXTWNS,MXATTS,
     -      NU,ISTAT,ITARG,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,IPTYPE,
     -      IPTECH,LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       DOUBLE PRECISION PNT,AFIT(MXFPAR),VALUE
       REAL RES(1),VAR(MXVAR),VFIT(MXWIRE),EX,EY,EZ,ETOT,VOLT,DRES,QPLT,
     -      ANG,VPLFIT(5)
       INTEGER MODVAR(MXVAR),MODRES(1),I,ITYPE,ILOC,ISWIRE,IFAIL,IPOS,
     -      JPOS,IANG
*** Drift line parameters.
       QPLT=-1.0
       ITYPE=1
*** First set the potentials.
       DO 10 I=1,NWIRE
       IF(INDSW(I).NE.0)THEN
            VFIT(I)=VST(I)+AFIT(INDSW(I))
       ELSE
            VFIT(I)=VST(I)
       ENDIF
10     CONTINUE
       DO 20 I=1,4
       IF(YNPLAN(I).AND.INDPLA(I).NE.0)THEN
            VPLFIT(I)=VPLST(I)+AFIT(INDPLA(I))
       ELSE
            VPLFIT(I)=VPLST(I)
       ENDIF
20     CONTINUE
       IF(TUBE.AND.INDPLA(5).NE.0)THEN
            VPLFIT(5)=VPLST(5)+AFIT(INDPLA(5))
       ELSE
            VPLFIT(5)=VPLST(5)
       ENDIF
*** Next reconstruct the charges.
       CALL SETNEW(VFIT,VPLFIT,IFAIL)
       IF(IFAIL.NE.0)THEN
            VALUE=0.0
            RETURN
       ENDIF
*** Find out to which coordinate PNT belongs.
C      if(abs(pnt-anint(pnt)).gt.1.0e-5)print *,' Rounding error !!!'
       IF(PNTTYP.EQ.'TRACK')THEN
            VAR(1)=XT0+(PNT-1.0)*(XT1-XT0)/REAL(NPOINT-1)
            VAR(2)=YT0+(PNT-1.0)*(YT1-YT0)/REAL(NPOINT-1)
            IF(POLAR)CALL CFMCTR(VAR(1),VAR(2),VAR(1),VAR(2),1)
            CALL EFIELD(VAR(1),VAR(2),0.0,
     -           VAR(3),VAR(4),EZ,VAR(5),VAR(6),
     -           IOPT,ILOC)
            IF(EVALT.OR.EVALD.OR.EVALA)THEN
                 CALL DLCALC(VAR(1),VAR(2),0.0,QPLT,ITYPE)
                 VAR(7)=TU(NU)
                 IF(EVALD)CALL DLCDIF(VAR(8))
                 IF(EVALA)CALL DLCTWN(VAR(9))
            ENDIF
       ELSEIF(PNTTYP.EQ.'GRID')THEN
            JPOS=1+NINT(PNT-1.0)/NGRIDX
            IPOS=NINT(PNT)-NGRIDX*(JPOS-1)
            IF(.NOT.POLAR)THEN
                 VAR(1)=PXMIN+REAL(IPOS-1)*(PXMAX-PXMIN)/REAL(NGRIDX-1)
            ELSE
                 VAR(1)=LOG(EXP(PXMIN)+REAL(IPOS-1)*
     -                (EXP(PXMAX)-EXP(PXMIN))/REAL(NGRIDX-1))
            ENDIF
            VAR(2)=PYMIN+REAL(JPOS-1)*(PYMAX-PYMIN)/REAL(NGRIDY-1)
            CALL EFIELD(VAR(1),VAR(2),0.0,
     -           VAR(3),VAR(4),EZ,VAR(5),VAR(6),
     -           IOPT,ILOC)
            IF(EVALT.OR.EVALD.OR.EVALA)THEN
                 CALL DLCALC(VAR(1),VAR(2),0.0,QPLT,ITYPE)
                 VAR(7)=TU(NU)
                 IF(EVALD)CALL DLCDIF(VAR(8))
                 IF(EVALA)CALL DLCTWN(VAR(9))
            ENDIF
       ELSEIF(PNTTYP.EQ.'WIRE')THEN
            ISWIRE=0
            DO 50 I=1,NWIRE
            IF(WIRTYP(I).EQ.'S')ISWIRE=ISWIRE+1
            IF(ISWIRE.EQ.NINT(PNT))THEN
                 DRES=D(I)
                 D(I)=0.0
                 VAR(1)=X(I)
                 VAR(2)=Y(I)
                 VAR(3)=0.0
                 VAR(4)=0.0
                 VAR(5)=0.0
                 VAR(6)=0.0
                 DO 60 IANG=1,NPOINT
                 ANG=REAL(IANG-1)*(2.0-1.0/REAL(NPOINT-1))*PI/
     -                REAL(NPOINT-1)
                 CALL EFIELD(X(I)+COS(ANG)*DRES/2,
     -                Y(I)+SIN(ANG)*DRES/2,0.0,
     -                EX,EY,EZ,ETOT,VOLT,IOPT,ILOC)
                 VAR(5)=VAR(5)+ETOT
                 VAR(6)=VAR(6)+VOLT
60               CONTINUE
                 VAR(5)=VAR(5)/REAL(NPOINT)
                 VAR(6)=VAR(6)/REAL(NPOINT)
                 D(I)=DRES
                 GOTO 70
            ENDIF
50          CONTINUE
70          CONTINUE
            VAR(7)=0.0
            VAR(8)=0.0
            VAR(9)=0.0
       ENDIF
*** Transform to polar if needed.
       IF(POLAR)THEN
            CALL CFMRTP(VAR(1),VAR(2),VAR(1),VAR(2),1)
            VAR(3)=VAR(3)/VAR(1)
            VAR(4)=VAR(4)/VAR(1)
            VAR(5)=VAR(5)/VAR(1)
       ENDIF
*** Fill in the mode of the variables.
       DO 80 I=1,9
       MODVAR(I)=2
80     CONTINUE
*** Calculate the field function with this field.
       CALL ALGEXE(IENFLD,VAR,MODVAR,9,RES,MODRES,1,IFAIL)
*** And return the answer to LSQFIT.
       VALUE=RES(1)
       END
