CDECK  ID>, DLCTRP.
       SUBROUTINE DLCTRP(X0,Y0,Z0,X1,Y1,Z1,LDIFF,LTOWN,LATTA,NLTRIN,
     -      TMIN,TMAX,SMIN,SMAX,AMIN,AMAX,BMIN,BMAX,IFAIL)
*-----------------------------------------------------------------------
*   DLCTRP - Prepares a track for interpolation by DLCTRI.
*   (Last changed on 20/ 5/99.)
*-----------------------------------------------------------------------
       implicit none
       INTEGER MXWIRE,MXSW,MXLIST,MXCHA,MXGRID,MXMATT,MXPOLE,MX3D,
     -         MXPSTR,
     -         MXPAIR,MXPART,MXFOUR,MXCLUS,
     -         MXLINE,MXEQUT,
     -         MXRECL,MXINCH,MXWORD,MXCHAR,MXNAME,MXLUN,
     -         MXINS,MXREG,MXARG,MXCONS,MXVAR,MXALGE,
     -         MXZERO,MXSTCK,MXFPNT,MXFPAR,MXWKLS,
     -         MXHLEV,MXHLRL,MXSUBT,
     -         MXDLVL,MXILVL,MXDLIN,
     -         MXHIST,MXFRAC,MXBANG,MXBTAB,
     -         MXEXG,MXIOG,MXCSG,
     -         MXORIA,
     -         MXMAT,MXEMAT,MXMDIM,
     -         MXSHOT,MXZPAR,
     -         MXMAP,MXEPS,MXWMAP,MXSOLI,MXSBUF,
     -         MXPLAN,MXPOIN,MXEDGE,
     -         MXMCA
       PARAMETER (MXWIRE=  2000,MXSW  =  200)
       PARAMETER (MXMATT=    10)
       PARAMETER (MX3D  =   100)
       PARAMETER (MXPOLE=    10)
       PARAMETER (MXPSTR=   100)
       PARAMETER (MXLIST=  1000)
       PARAMETER (MXHIST=   200, MXCHA = MXLIST/2)
       PARAMETER (MXGRID=    50)
       PARAMETER (MXNAME=   200, MXLUN =    30)
       PARAMETER (MXCLUS=   500, MXPAIR=  2000, MXPART= 10000)
       PARAMETER (MXLINE=   150, MXEQUT=    50)
       PARAMETER (MXFOUR=    16)
       PARAMETER (MXRECL= 10000)
       PARAMETER (MXINCH=  2000, MXWORD=   200, MXCHAR=MXINCH)
       PARAMETER (MXINS =  1000, MXREG =   500, MXCONS=  -500,
     -            MXVAR =   500, MXALGE=   500, MXARG =   100)
       PARAMETER (MXMAT =   500, MXEMAT=200000, MXMDIM=   10)
       PARAMETER (MXZERO=MXWIRE)
       PARAMETER (MXSTCK=     5)
       PARAMETER (MXFPNT= 20000, MXFPAR=    10)
       PARAMETER (MXWKLS=    10)
       PARAMETER (MXHLEV=     9, MXSUBT=   200, MXHLRL=  860)
       PARAMETER (MXDLVL=    10, MXILVL=    20, MXDLIN= 2500)
       PARAMETER (MXFRAC=    13)
       PARAMETER (MXBANG=    20, MXBTAB=    25)
       PARAMETER (MXEXG =    50, MXIOG =    10, MXCSG =  200)
       PARAMETER (MXORIA=  1000)
       PARAMETER (MXSHOT=    10, MXZPAR=4*MXSHOT+2)
       PARAMETER (MXMAP =350000,MXEPS =   10)
       PARAMETER (MXWMAP=     5)
       PARAMETER (MXSOLI=  1000)
       PARAMETER (MXPLAN= 50000, MXPOIN=100000,MXEDGE=100)
       PARAMETER (MXSBUF= 20000)
       PARAMETER (MXMCA = 50000)
*   The parameter MXNBMC must equal MXGNAM (sequence MAGBPARM) !
       INTEGER MXNBMC
       PARAMETER(MXNBMC=60)
       LOGICAL FPERX,FPERY,LCROSS,TRASET,TRAFLG,LITAIL,LDTAIL,LRTAIL,
     -      LEPULS,LIPULS,SIGSET,RESSET
       INTEGER NPAIR,ICLUST,NFOUR,MFEXP,MXMIN,MXMAX,
     -      MYMIN,MYMAX,NTRBNK,ITRMAJ,NTIME,NORIA,
     -      NASIMP,JIORD,NISIMP,NMQUAD,NCANG,IENANG
       REAL TIMSIG,SIGNAL,TCLUST,SCLUST,ACLUST,BCLUST,FCLUST,
     -      AVALAN,TSTART,TDEV,PRSTHR,
     -      TRABNK,TRAVEC
       CHARACTER*(MXCHAR) FCNANG
       CHARACTER*12 AVATYP
       CHARACTER*3 FCELTP
       COMMON /SIGDAT/ TIMSIG(MXLIST),SIGNAL(MXLIST,MXSW,2),
     -      AVALAN(2),TRAVEC(MXLIST),
     -      TRABNK(MXLIST,9),TSTART,TDEV,PRSTHR,
     -      TCLUST,SCLUST,ACLUST,BCLUST,FCLUST,ICLUST,NPAIR,
     -      NFOUR,ITRMAJ,JIORD,NISIMP,NMQUAD,IENANG,NTIME,NORIA,
     -      MFEXP,MXMIN,MXMAX,MYMIN,MYMAX,NTRBNK,NASIMP,NCANG,
     -      TRASET,TRAFLG(9),FPERX,FPERY,LCROSS,LITAIL,LDTAIL,LRTAIL,
     -      LEPULS,LIPULS,SIGSET,RESSET
       COMMON /SIGCHR/ FCELTP,AVATYP,FCNANG
       CHARACTER*80 CELLID
       CHARACTER*3 TYPE
       CHARACTER WIRTYP(MXWIRE),PLATYP(5),
     -      PSLAB1(5,MXPSTR),PSLAB2(5,MXPSTR)
       LOGICAL YNPLAN(4),PERX,PERY,PERZ,YNPLAX,YNPLAY,YNMATX,YNMATY,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,
     -      PERRX,PERRY,PERRZ,CNALSO(MXWIRE),LBGFMP,CELSET,LDIPOL,
     -      BEMSET
       INTEGER INDSW(MXWIRE),NWIRE,NSW,ICTYPE,MODE,NTUBE,MTUBE,
     -      NXMATT,NYMATT,N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA(5),NPSTR1(5),NPSTR2(5),
     -      INDST1(5,MXPSTR),INDST2(5,MXPSTR)
       REAL X(MXWIRE),Y(MXWIRE),V(MXWIRE),E(MXWIRE),D(MXWIRE),W(MXWIRE),
     -      U(MXWIRE),DENS(MXWIRE),
     -      COSPH2(MXWIRE),SINPH2(MXWIRE),AMP2(MXWIRE),
     -      COPLAN(4),VTPLAN(4),XMATT(MXMATT,5),YMATT(MXMATT,5),
     -      X3D(MX3D),Y3D(MX3D),Z3D(MX3D),E3D(MX3D),
     -      DOWN(3),PLSTR1(5,MXPSTR,3),PLSTR2(5,MXPSTR,3),
     -      COTUBE,VTTUBE,B2SIN(MXWIRE),P1,P2,C1,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,
     -      KAPPA
       COMPLEX ZMULT,WMAP(MXWIRE)
       COMMON /CELDAT/ ZMULT,WMAP,X,Y,V,E,D,W,U,DENS,
     -      COSPH2,SINPH2,AMP2,
     -      B2SIN,COPLAN,VTPLAN,XMATT,YMATT,X3D,Y3D,Z3D,E3D,DOWN,
     -      PLSTR1,PLSTR2,
     -      XMIN,YMIN,ZMIN,XMAX,YMAX,ZMAX,VMIN,VMAX,
     -      COPLAX,COPLAY,COMATX,COMATY,COTUBE,VTTUBE,
     -      CORVTA,CORVTB,CORVTC,V0,SX,SY,SZ,P1,P2,C1,KAPPA,
     -      INDSW,NWIRE,NSW,ICTYPE,MODE,NXMATT,NYMATT,NTUBE,MTUBE,
     -      N3D,NTERMB,NTERMP,IENBGF,
     -      INDPLA,NPSTR1,NPSTR2,INDST1,INDST2,
     -      YNPLAN,YNPLAX,YNPLAY,YNMATX,YNMATY,PERX,PERY,PERZ,
     -      POLAR,TUBE,PERMX,PERMY,PERMZ,PERAX,PERAY,PERAZ,CNALSO,
     -      PERRX,PERRY,PERRZ,LBGFMP,CELSET,LDIPOL,BEMSET
       COMMON /CELCHR/ CELLID,WIRTYP,PLATYP,TYPE,PSLAB1,PSLAB2
       DOUBLE PRECISION CLSDIS,CLSAVE
       REAL EGAS,VGAS,XGAS,YGAS,DGAS,AGAS,BGAS,HGAS,MGAS,WGAS,OGAS,SGAS,
     -      EXGAS,IOGAS,
     -      CVGAS,CXGAS,CYGAS,CDGAS,CAGAS,CBGAS,CHGAS,CMGAS,CWGAS,COGAS,
     -      CSGAS,CEXGAS,CIOGAS,
     -      VGAS2,XGAS2,YGAS2,DGAS2,AGAS2,BGAS2,HGAS2,MGAS2,WGAS2,OGAS2,
     -      SGAS2,EXGAS2,IOGAS2,
     -      AORIG,AORIG2,PENPRB,PENRMS,PENDT,ENIOG,ENEXG,
     -      BANG,BTAB,
     -      VEXTR1,VEXTR2,VEXTR3,VEXTR4,
     -      XEXTR1,XEXTR2,XEXTR3,XEXTR4,
     -      YEXTR1,YEXTR2,YEXTR3,YEXTR4,
     -      DEXTR1,DEXTR2,DEXTR3,DEXTR4,
     -      AEXTR1,AEXTR2,AEXTR3,AEXTR4,
     -      BEXTR1,BEXTR2,BEXTR3,BEXTR4,
     -      HEXTR1,HEXTR2,HEXTR3,HEXTR4,
     -      MEXTR1,MEXTR2,MEXTR3,MEXTR4,
     -      WEXTR1,WEXTR2,WEXTR3,WEXTR4,
     -      OEXTR1,OEXTR2,OEXTR3,OEXTR4,
     -      SEXTR1,SEXTR2,SEXTR3,SEXTR4,
     -      EEXTR1,EEXTR2,EEXTR3,EEXTR4,
     -      ZEXTR1,ZEXTR2,ZEXTR3,ZEXTR4,
     -      GASRNG,
     -      Z,A,RHO,CMEAN,EMPROB,EPAIR,PGAS,TGAS,GASDEN,
     -      DTION,DLION,GASFRM,ELOSCS
       LOGICAL GASOK,TAB2D,GASOPT,HEEDOK,SRIMOK,TRIMOK,GASSET
       INTEGER NGAS,NCLS,NBANG,NBTAB,NFTAB,NFCLS,
     -      IVMETH,IXMETH,IYMETH,IDMETH,IAMETH,IBMETH,IHMETH,IMMETH,
     -      IWMETH,IOMETH,ISMETH,IEMETH,IZMETH,
     -      IVEXTR,IXEXTR,IYEXTR,IDEXTR,IAEXTR,IBEXTR,IHEXTR,IMEXTR,
     -      IWEXTR,IOEXTR,ISEXTR,IEEXTR,IZEXTR,
     -      JVEXTR,JXEXTR,JYEXTR,JDEXTR,JAEXTR,JBEXTR,JHEXTR,JMEXTR,
     -      JWEXTR,JOEXTR,JSEXTR,JEEXTR,JZEXTR,
     -      IATHR,IBTHR,IHTHR,
     -      NEXGAS,NIOGAS,NCSGAS,ICSTYP
       CHARACTER*80 GASID
       CHARACTER*(MXCHAR) FCNTAB,FCNCLS
       CHARACTER*10 CLSTYP
       CHARACTER*45 DSCEXG(MXEXG),DSCIOG(MXIOG),DSCCSG(MXCSG)
       COMMON /GASDAT/ CLSDIS(MXPAIR),CLSAVE,
     -      EGAS(MXLIST),
     -      VGAS(MXLIST),XGAS(MXLIST),YGAS(MXLIST),WGAS(MXLIST),
     -      DGAS(MXLIST),OGAS(MXLIST),AGAS(MXLIST),BGAS(MXLIST),
     -      HGAS(MXLIST),MGAS(MXLIST),SGAS(MXLIST,6),
     -      EXGAS(MXLIST,MXEXG),IOGAS(MXLIST,MXIOG),
     -      CVGAS(MXLIST),CXGAS(MXLIST),CYGAS(MXLIST),CWGAS(MXLIST),
     -      CDGAS(MXLIST),COGAS(MXLIST),CAGAS(MXLIST),CBGAS(MXLIST),
     -      CHGAS(MXLIST),CMGAS(MXLIST),CSGAS(MXLIST,6),
     -      CEXGAS(MXLIST,MXEXG),CIOGAS(MXLIST,MXIOG),
     -      VGAS2(MXLIST,MXBANG,MXBTAB),WGAS2(MXLIST,MXBANG,MXBTAB),
     -      XGAS2(MXLIST,MXBANG,MXBTAB),YGAS2(MXLIST,MXBANG,MXBTAB),
     -      AGAS2(MXLIST,MXBANG,MXBTAB),BGAS2(MXLIST,MXBANG,MXBTAB),
     -      DGAS2(MXLIST,MXBANG,MXBTAB),OGAS2(MXLIST,MXBANG,MXBTAB),
     -      HGAS2(MXLIST,MXBANG,MXBTAB),MGAS2(MXLIST,MXBANG,MXBTAB),
     -      SGAS2(MXLIST,MXBANG,MXBTAB,6),
     -      EXGAS2(MXLIST,MXBANG,MXBTAB,MXEXG),
     -      IOGAS2(MXLIST,MXBANG,MXBTAB,MXIOG),
     -      AORIG(MXLIST),AORIG2(MXLIST,MXBANG,MXBTAB),
     -      PENPRB(MXEXG),PENRMS(MXEXG),PENDT(MXEXG),
     -      ENIOG(MXIOG),ENEXG(MXEXG),
     -      BANG(MXBANG),BTAB(MXBTAB),
     -      GASRNG(20,2),GASFRM(MXNBMC),ELOSCS(MXCSG),
     -      Z,A,RHO,CMEAN,EMPROB,EPAIR,PGAS,TGAS,GASDEN,
     -      DTION,DLION,
     -      VEXTR1,VEXTR2,VEXTR3,VEXTR4,
     -      XEXTR1,XEXTR2,XEXTR3,XEXTR4,
     -      YEXTR1,YEXTR2,YEXTR3,YEXTR4,
     -      DEXTR1,DEXTR2,DEXTR3,DEXTR4,
     -      AEXTR1,AEXTR2,AEXTR3,AEXTR4,
     -      BEXTR1,BEXTR2,BEXTR3,BEXTR4,
     -      HEXTR1,HEXTR2,HEXTR3,HEXTR4,
     -      MEXTR1,MEXTR2,MEXTR3,MEXTR4,
     -      WEXTR1,WEXTR2,WEXTR3,WEXTR4,
     -      OEXTR1,OEXTR2,OEXTR3,OEXTR4,
     -      SEXTR1(6),SEXTR2(6),SEXTR3(6),SEXTR4(6),
     -      EEXTR1(MXEXG),EEXTR2(MXEXG),EEXTR3(MXEXG),EEXTR4(MXEXG),
     -      ZEXTR1(MXIOG),ZEXTR2(MXIOG),ZEXTR3(MXIOG),ZEXTR4(MXIOG),
     -      IVMETH,IXMETH,IYMETH,IDMETH,IAMETH,IBMETH,IHMETH,IMMETH,
     -      IWMETH,IOMETH,ISMETH,IEMETH,IZMETH,
     -      IVEXTR,IXEXTR,IYEXTR,IDEXTR,IAEXTR,IBEXTR,IHEXTR,IMEXTR,
     -      IWEXTR,IOEXTR,ISEXTR,IEEXTR,IZEXTR,
     -      JVEXTR,JXEXTR,JYEXTR,JDEXTR,JAEXTR,JBEXTR,JHEXTR,JMEXTR,
     -      JWEXTR,JOEXTR,JSEXTR,JEEXTR,JZEXTR,
     -      NGAS,NCLS,NBANG,NBTAB,NFTAB,NFCLS,
     -      IATHR,IBTHR,IHTHR,
     -      NEXGAS,NIOGAS,NCSGAS,ICSTYP(MXCSG),
     -      GASOK(20),GASOPT(20,4),
     -      TAB2D,HEEDOK,SRIMOK,TRIMOK,GASSET
       COMMON /GASCHR/ FCNTAB,FCNCLS,CLSTYP,GASID,DSCEXG,DSCIOG,DSCCSG
       DOUBLE PRECISION WGT,FPRMAT,
     -      FPROJ,FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX,GYBOX,GZBOX
       REAL PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM
       INTEGER NLINED,NGRIDX,NGRIDY,ITRTYP,NTRLIN,NTRSAM,INDPOS,NCTRW,
     -      NTRFLX,NINORD,
     -      NCPNAM,NCXLAB,NCYLAB,NCFPRO,IPRMAT,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,ITFSRM,NTRERR
       LOGICAL LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG,LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       COMMON /PARMS / WGT(MXLIST),FPRMAT(3,3),
     -      FPROJ(3,3),FPROJA,FPROJB,FPROJC,FPROJD,FPROJN,
     -      EPSGX,EPSGY,EPSGZ,
     -      GXMIN,GYMIN,GZMIN,GXMAX,GYMAX,GZMAX,
     -      GXBOX(12),GYBOX(12),GZBOX(12),
     -      PXMIN,PYMIN,PZMIN,PXMAX,PYMAX,PZMAX,
     -      PRTHL,PRPHIL,PRAL,PRBL,PRCL,PROROT,
     -      PRFABS,PRFREF,PRFMIN,PRFMAX,PRFCAL,WLMIN,WLMAX,
     -      XT0,YT0,ZT0,XT1,YT1,ZT1,
     -      TRMASS,TRENER,TRCHAR,TRXDIR,TRYDIR,TRZDIR,TRTH,TRPHI,TRDIST,
     -      TRFLUX,TRELEC,TRNSRM,
     -      INDPOS(11000),IPRMAT(3),NCTRW,NCPNAM,
     -      ITRTYP,NTRLIN,NTRSAM,NTRFLX,ITFSRM,NTRERR(10),
     -      NLINED,NINORD,NGRIDX,NGRIDY,NCXLAB,NCYLAB,NCFPRO,
     -      NPRCOL,ICOL0,ICOLBX,ICOLPL,ICOLST,ICOLW1,ICOLW2,ICOLW3,
     -      ICOLD1,ICOLD2,ICOLD3,ICOLRB,NGBOX,
     -      LTRMS,LTRDEL,LTRINT,LTREXB,LTRCUT,TRFLAG(10),LINCAL,
     -      LFULLB,LFULLP,LFULLT,LSPLIT,LSORT,LOUTL,LEPSG,LGSTEP,
     -      LDLSRM,LDTSRM,LTRVVL
       CHARACTER*80 PARTID,PXLAB,PYLAB,PROLAB
       CHARACTER*10 PNAME
       CHARACTER*5  PRVIEW
       CHARACTER*(MXCHAR) FCNTRW
       COMMON /PARCHR/ PARTID,FCNTRW,PNAME,PXLAB,PYLAB,PROLAB,PRVIEW
       DOUBLE PRECISION XU,YU,ZU,TU,XTARG,YTARG,TMC,DMC
       REAL DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,DTARG,EPSDFI,EPSTWI,
     -      EPSATI,RDF2,DSCMIN,DSCMAX,DTFACT,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,EPSDIF,RTRAP,
     -      STMAX,EQTTHR,EQTASP,EQTCLS,QPCHAR
       INTEGER NU,ISTAT,ITARG,MXDIFS,MXTWNS,MXATTS,MDF2,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,
     -      IPTYPE,IPTECH
       LOGICAL LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       COMMON /DRFDAT/ XU(MXLIST),YU(MXLIST),ZU(MXLIST),TU(MXLIST),
     -      XTARG,YTARG,TMC,DMC,DTARG,
     -      DXMIN,DYMIN,DZMIN,DXMAX,DYMAX,DZMAX,
     -      DDXMIN,DDXMAX,DDYMIN,DDYMAX,DDZMIN,DDZMAX,
     -      EQTTHR,EQTASP,EQTCLS,QPCHAR,
     -      RTRAP,STMAX,EPSDIF,EPSDFI,EPSTWI,EPSATI,RDF2,DSCMIN,DSCMAX,
     -      DTFACT,MDF2,
     -      MXDIFS,MXTWNS,MXATTS,
     -      NU,ISTAT,ITARG,
     -      ISTAT1,ISTAT2,ISTAT3,ISTAT4,ISTAT5,ISTAT6,NMC,MCMETH,IPTYPE,
     -      IPTECH,LREPSK,LKINK,LSTMAX,LEQSRT,LEQCRS,LEQMRK,LAVPRO
       LOGICAL         LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD
       INTEGER LUNOUT,JFAIL,JEXMEM
       COMMON /PRTPLT/ LINPUT,LCELPR,LCELPL,LWRMRK,LISOCL,LCHGCH,
     -         LDRPLT,LDRPRT,LCLPRT,LCLPLT,LMAPCH,LCNTAM,
     -         LDEBUG,LIDENT,LKEYPL,LRNDMI,LPROPR,LPROF,LGSTOP,LGSIG,
     -         LSYNCH,LINPRD,LUNOUT,JFAIL,JEXMEM
C       logical ldebug,lident,ldrplt
C       integer lunout
C       parameter(ldebug=.true.,lident=.false.,ldrplt=.true.,lunout=6)
       COMPLEX ICONS
       REAL PI,CLOG2,EPS0,ECHARG,EMASS,CLIGHT,MEV2KG,BOLTZ,GRAV
       PARAMETER (PI=3.141592653589793238,
     -      CLOG2=0.693147180559945309417,
     -      ICONS=(0.0,1.0),
     -      EPS0=8.854187817E-14,
     -      ECHARG=1.60217733E-19,
     -      EMASS=9.1093897E-31,
     -      GRAV=9.80665,
     -      CLIGHT=2.99792458E4,
     -      MEV2KG = 1.782661845E-30,
     -      BOLTZ=1.380658E-23)
       REAL XPL(MXLIST),YPL(MXLIST),X0,Y0,Z0,X1,Y1,Z1,
     -      XX0,YY0,ZZ0,XX1,YY1,ZZ1,XSTART,YSTART,ZSTART,COORD(MXLIST),
     -      TMIN,TMAX,SMIN,SMAX,AMIN,AMAX,BMIN,BMAX,DELTAT,XCL,YCL,ZCL,
     -      TCL,SCL,ACL,BCL,FCL,VXMIN,VYMIN,VXMAX,VYMAX
       DOUBLE PRECISION XAUX(2),YAUX(2),ZAUX(2)
       INTEGER NLTRIN,IFAIL,IFAIL1,I,J,IL,ICL,IDMAX,JL,KL,NLTR
       LOGICAL LDIFF,LTOWN,LATTA
*** Identify the routine if requested.
       IF(LIDENT)PRINT *,' /// ROUTINE DLCTRP ///'
*** Assume failure, reset at the end.
       IFAIL=1
*** Be sure not more than MXLIST tracks are requested.
       IF(NLTRIN.GT.MXLIST-4.OR.NLTRIN.LT.4)THEN
            PRINT *,' !!!!!! DLCTRP WARNING : Number of drift lines'//
     -           ' is not in the range [4,MXLIST-4]; no preparation.'
            RETURN
       ENDIF
*** Initialise the parameters.
       DO 1 I=1,9
       TRAFLG(I)=.TRUE.
1      CONTINUE
       TRAFLG(5)=LDIFF.AND.GASOK(3)
       TRAFLG(6)=LTOWN.AND.GASOK(4)
       TRAFLG(7)=LATTA.AND.GASOK(6)
       TRASET=.FALSE.
       NLTR=4*NINT(REAL(NLTRIN)/4.0)
       IF(NLTR.GT.MXLIST-4)NLTR=4*INT((MXLIST-4)/4.0)
       DO 2 I=1,MXLIST
       DO 3 J=1,9
       TRABNK(I,J)=0.0
3      CONTINUE
2      CONTINUE
*** Cut the track if we're inside a tube.
       IF(TUBE)THEN
            CALL CRTUBE(X0,Y0,Z0,X1,Y1,Z1,XX0,YY0,ZZ0,XX1,YY1,ZZ1,
     -           COTUBE,IFAIL1)
            IF(IFAIL1.NE.0)THEN
                 PRINT *,' !!!!!! DLCTRP WARNING : Track not suitable'//
     -                ' for preparation ; not done.'
                 IFAIL=1
                 RETURN
            ENDIF
       ELSE
            XX0=X0
            XX1=X1
            YY0=Y0
            YY1=Y1
            ZZ0=Z0
            ZZ1=Z1
       ENDIF
*** Generate debugging output.
       IF(LDEBUG)WRITE(LUNOUT,'(''  ++++++ DLCTRP DEBUG   : TRAFLG='',
     -      9L1,'' NLTR='',I5)') (TRAFLG(I),I=1,9),NLTR
*** Calculate drift lines from the equidistant points on the track.
       IF(LDEBUG)WRITE(LUNOUT,'(''  ++++++ DLCTRP DEBUG   : List of'',
     -      '' drift-lines from equidistant track points.'')')
**  Open a plot frame if the DRIFT-PLOT option is on.
       IF(LDRPLT)THEN
            CALL GRCELL(VXMIN,VYMIN,VXMAX,VYMAX,
     -           'Drift lines for the track table')
            IF(GASID.NE.' ')CALL GRCOMM(2,'Gas: '//GASID)
*   Plot the accepting segment as a dashed line.
            XAUX(1)=X0
            YAUX(1)=Y0
            ZAUX(1)=Z0
            XAUX(2)=X1
            YAUX(2)=Y1
            ZAUX(2)=Z1
            IF(POLAR)CALL CF2CTR(XAUX,YAUX,XAUX,YAUX,2)
            CALL GRATTS('TRACK','POLYLINE')
            CALL PLAGPL(2,XAUX,YAUX,ZAUX)
       ENDIF
**  Initialise the track bank with the track given and true start.
       NTRBNK=2
       TRABNK(1,1)=X0
       TRABNK(1,2)=Y0
       TRABNK(1,3)=Z0
       TRABNK(1,8)=-4
       TRABNK(2,1)=XX0
       TRABNK(2,2)=YY0
       TRABNK(2,3)=ZZ0
       TRABNK(2,8)=-4
**  Loop along the segment, produce 3*NLTR/4 drift-lines.
       IF(LDRPLT)CALL GRATTS('E-DRIFT-LINE','POLYLINE')
       DO 300 IL=1,3*NLTR/4
*   Check number of drift-lines.
       IF(NTRBNK+1.GT.MXLIST)THEN
            IF(LDEBUG)PRINT *,' ++++++ DLCTRP DEBUG   : NTRBNK=MXLIST.'
            GOTO 390
       ENDIF
*   Calculate a drift-line.
       XSTART=XX0+REAL(IL-1)*(XX1-XX0)/REAL(3*NLTR/4-1)
       YSTART=YY0+REAL(IL-1)*(YY1-YY0)/REAL(3*NLTR/4-1)
       ZSTART=ZZ0+REAL(IL-1)*(ZZ1-ZZ0)/REAL(3*NLTR/4-1)
       IF(POLAR)CALL CFMCTR(XSTART,YSTART,XSTART,YSTART,1)
       CALL DLCALC(XSTART,YSTART,ZSTART,-1.0,1)
       IF(POLAR)CALL CFMRTC(XSTART,YSTART,XSTART,YSTART,1)
*   Add the new drift-line to the table.
       NTRBNK=NTRBNK+1
       TRABNK(NTRBNK,1)=XSTART
       TRABNK(NTRBNK,2)=YSTART
       TRABNK(NTRBNK,3)=ZSTART
       TRABNK(NTRBNK,4)=REAL(TU(NU))
       IF(TRAFLG(5))CALL DLCDIF(TRABNK(NTRBNK,5))
       IF(TRAFLG(6))CALL DLCTWN(TRABNK(NTRBNK,6))
       IF(TRAFLG(7))CALL DLCATT(TRABNK(NTRBNK,7))
       TRABNK(NTRBNK,8)=REAL(ISTAT)
       CALL DLCPHI(TRABNK(NTRBNK,9))
       IF(NINT(TRABNK(NTRBNK,8)).EQ.NINT(TRABNK(NTRBNK-1,8)))THEN
            IF(TRABNK(NTRBNK,9).GT.TRABNK(NTRBNK-1,9)+PI)THEN
                 TRABNK(NTRBNK,9)=TRABNK(NTRBNK,9)-2*PI
            ELSEIF(TRABNK(NTRBNK,9).LT.TRABNK(NTRBNK-1,9)-PI)THEN
                 TRABNK(NTRBNK,9)=TRABNK(NTRBNK,9)+2*PI
            ENDIF
       ENDIF
       IF(LDEBUG)WRITE(LUNOUT,'(2X,''(x,y,z)='',3E11.4,'', t='',E11.4,
     -      '', sigma='',E11.4/''  avalanche='',E11.4,'', loss='',E11.4,
     -      '', angle='',E11.4,'', ISTAT='',I4,'',NU='',I3)')
     -      (TRABNK(NTRBNK,J),J=1,7),TRABNK(NTRBNK,9),
     -      NINT(TRABNK(NTRBNK,8)),NU
*   Plot and print the data if requested.
       IF(LDRPLT)CALL DLCPLT
*   Proceed with the next drift-line.
300    CONTINUE
**  Complete the bank with the given and true end point.
       IF(NTRBNK+2.GT.MXLIST)THEN
            IF(LDEBUG)PRINT *,' ++++++ DLCTRP DEBUG   : NTRBNK=MXLIST.'
            GOTO 390
       ENDIF
       TRABNK(NTRBNK+1,1)=XX1
       TRABNK(NTRBNK+1,2)=YY1
       TRABNK(NTRBNK+1,3)=ZZ1
       TRABNK(NTRBNK+1,8)=-4
       TRABNK(NTRBNK+2,1)=X1
       TRABNK(NTRBNK+2,2)=Y1
       TRABNK(NTRBNK+2,3)=Z1
       TRABNK(NTRBNK+2,8)=-4
       NTRBNK=NTRBNK+2
**  Next add the other NLTR/4 drift-lines where delta t is largest.
       IF(NTRBNK.LE.5)GOTO 390
       IF(LDEBUG)PRINT *,' ++++++ DLCTRP DEBUG   : Adding intermediate',
     -      ' drift-lines at largest t jumps.'
       DO 360 IL=1,NLTR/4
*   Check number of drift-lines.
       IF(NTRBNK+1.GT.MXLIST)THEN
            IF(LDEBUG)PRINT *,' ++++++ DLCTRP DEBUG   : NTRBNK=MXLIST.'
            GOTO 390
       ENDIF
*   Locate the largest t jump.
       DELTAT=ABS(TRABNK(4,4)-TRABNK(3,4))
       IDMAX=3
       DO 370 JL=4,NTRBNK-3
       IF(ABS(TRABNK(JL+1,4)-TRABNK(JL,4)).GT.DELTAT)THEN
            DELTAT=ABS(TRABNK(JL+1,4)-TRABNK(JL,4))
            IDMAX=JL
       ENDIF
370    CONTINUE
*   Shift everything above by one place.
       DO 380 JL=NTRBNK,IDMAX+1,-1
       DO 385 KL=1,9
       TRABNK(JL+1,KL)=TRABNK(JL,KL)
385    CONTINUE
380    CONTINUE
*   Halve the gap between the two points.
       TRABNK(IDMAX+1,1)=(TRABNK(IDMAX,1)+TRABNK(IDMAX+2,1))/2
       TRABNK(IDMAX+1,2)=(TRABNK(IDMAX,2)+TRABNK(IDMAX+2,2))/2
       TRABNK(IDMAX+1,3)=(TRABNK(IDMAX,3)+TRABNK(IDMAX+2,3))/2
*   Calculate a drift-line from the half-way point.
       XSTART=TRABNK(IDMAX+1,1)
       YSTART=TRABNK(IDMAX+1,2)
       ZSTART=TRABNK(IDMAX+1,3)
       IF(POLAR)CALL CFMCTR(XSTART,YSTART,XSTART,YSTART,1)
       CALL DLCALC(XSTART,YSTART,ZSTART,-1.0,1)
       IF(POLAR)CALL CFMRTC(XSTART,YSTART,XSTART,YSTART,1)
*   Add the new drift-line to the table.
       NTRBNK=NTRBNK+1
       TRABNK(IDMAX+1,4)=REAL(TU(NU))
       IF(TRAFLG(5))CALL DLCDIF(TRABNK(IDMAX+1,5))
       IF(TRAFLG(6))CALL DLCTWN(TRABNK(IDMAX+1,6))
       IF(TRAFLG(7))CALL DLCATT(TRABNK(IDMAX+1,7))
       TRABNK(IDMAX+1,8)=REAL(ISTAT)
       CALL DLCPHI(TRABNK(IDMAX+1,9))
       IF(NINT(TRABNK(IDMAX+1,8)).EQ.NINT(TRABNK(IDMAX,8)))THEN
            IF(TRABNK(IDMAX+1,9).GT.TRABNK(IDMAX,9)+PI)THEN
                 TRABNK(IDMAX+1,9)=TRABNK(IDMAX+1,9)-2*PI
            ELSEIF(TRABNK(IDMAX+1,9).LT.TRABNK(IDMAX,9)-PI)THEN
                 TRABNK(IDMAX+1,9)=TRABNK(IDMAX+1,9)+2*PI
            ENDIF
       ENDIF
       IF(LDEBUG)WRITE(LUNOUT,'(2X,''(x,y,z)='',3E11.4,'', t='',E11.4,
     -      '', sigma='',E11.4/''  avalanche='',E11.4,'', loss='',E11.4,
     -      '', angle='',E11.4,'', ISTAT='',I4,'',NU='',I3)')
     -      (TRABNK(IDMAX+1,J),J=1,7),TRABNK(IDMAX+1,9),
     -      NINT(TRABNK(IDMAX+1,8)),NU
*   Plot and print the data if requested.
       IF(LDRPLT)CALL DLCPLT
*   Add another line.
360    CONTINUE
**  Jump to this point if the maximum number of drift-lines is reached.
390    CONTINUE
**  Finish this plot, if plotting has been requested.
       IF(LDRPLT)THEN
            CALL GRNEXT
            CALL GRALOG('Drift-lines from the acceptance segment.')
       ENDIF
*** Establish the tracks major direction.
       ITRMAJ=1
       IF(ABS(TRABNK(NTRBNK,2)-TRABNK(1,2)).GT.
     -      ABS(TRABNK(NTRBNK,ITRMAJ)-TRABNK(1,ITRMAJ)))ITRMAJ=2
       IF(ABS(TRABNK(NTRBNK,3)-TRABNK(1,3)).GT.
     -      ABS(TRABNK(NTRBNK,ITRMAJ)-TRABNK(1,ITRMAJ)))ITRMAJ=3
*** Prepare the distance vector used in interpolations.
       DO 200 J=1,NTRBNK
       TRAVEC(J)=ABS(TRABNK(J,1)-TRABNK(1,1))+
     -      ABS(TRABNK(J,2)-TRABNK(1,2))+
     -      ABS(TRABNK(J,3)-TRABNK(1,3))
200    CONTINUE
*** Determine maxima and minima, initialise.
       TMIN=TRABNK(3,4)
       TMAX=TRABNK(3,4)
       IF(TRAFLG(5))THEN
            SMIN=TRABNK(3,5)
            SMAX=TRABNK(3,5)
       ELSE
            SMIN=0.0
            SMAX=0.0
       ENDIF
       IF(TRAFLG(6))THEN
            AMIN=TRABNK(3,6)
            AMAX=TRABNK(3,6)
       ELSE
            AMIN=0.0
            AMAX=0.0
       ENDIF
       IF(TRAFLG(7))THEN
            BMIN=TRABNK(3,7)
            BMAX=TRABNK(3,7)
       ELSE
            BMIN=0.0
            BMAX=0.0
       ENDIF
*   Loop over the points.
       DO 400 I=4,NTRBNK-2
       TMIN=MIN(TMIN,TRABNK(I,4))
       TMAX=MAX(TMAX,TRABNK(I,4))
       IF(TRAFLG(5))THEN
            SMIN=MIN(SMIN,TRABNK(I,5))
            SMAX=MAX(SMAX,TRABNK(I,5))
       ENDIF
       IF(TRAFLG(6))THEN
            AMIN=MIN(AMIN,TRABNK(I,6))
            AMAX=MAX(AMAX,TRABNK(I,6))
       ENDIF
       IF(TRAFLG(7))THEN
            BMIN=MIN(BMIN,TRABNK(I,7))
            BMAX=MAX(BMAX,TRABNK(I,7))
       ENDIF
400    CONTINUE
*** The track is now prepared.
       TRASET=.TRUE.
       IF(LDEBUG)THEN
            WRITE(LUNOUT,'(''  INTERPOLATION TABLE:''/
     -           ''      i        x [cm]        y [cm]        z [cm]'',
     -           ''  t [microsec]  sigma [1 cm]     avalanche'',
     -           ''          loss  status'')')
            DO 500 I=3,NTRBNK-2
            WRITE(LUNOUT,'(2X,I5,7(2X,E12.5),2X,I6)')
     -           I,(TRABNK(I,J),J=1,7),NINT(TRABNK(I,8))
500         CONTINUE
            WRITE(LUNOUT,'(/''  Major axis: '',I5)') ITRMAJ
       ENDIF
*** Plot the various distributions if the debugging is requested.
       IF(LDEBUG.OR.LDRPLT)THEN
*   Prepare coordinate vector.
            DO 410 I=1,NTRBNK
            COORD(I)=SQRT((TRABNK(I,1)-X0)**2+(TRABNK(I,2)-Y0)**2+
     -           (TRABNK(I,3)-Z0)**2)/SQRT((TRABNK(NTRBNK,1)-X0)**2+
     -           (TRABNK(NTRBNK,2)-Y0)**2+(TRABNK(NTRBNK,3)-Z0)**2)
410         CONTINUE
*   Drift time.
            CALL GRGRPH(COORD(3),TRABNK(3,4),NTRBNK-4,
     -           'Track coordinate',
     -           'Drift time [microsec]','Drift time')
            DO 420 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,YPL(I),ICL,SCL,ACL,BCL,FCL,
     -           .FALSE.,.FALSE.,.FALSE.,IFAIL)
            IF(IFAIL.NE.0)YPL(I)=-1.0
420         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,4))
            CALL GRNEXT
            CALL GRALOG('Prepared track - drift time:')
*   Incidence angle.
            CALL GRGRPH(COORD(3),TRABNK(3,9),NTRBNK-4,
     -           'Track coordinate',
     -           'Incidence angle [radians]','Incidence angle')
            DO 425 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,TCL,ICL,SCL,ACL,BCL,YPL(I),
     -           .FALSE.,.FALSE.,.FALSE.,IFAIL)
            IF(IFAIL.NE.0)YPL(I)=-1.0
425         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,9))
            CALL GRNEXT
            CALL GRALOG('Prepared track - angle:')
*   Status code.
            CALL GRGRPH(COORD(3),TRABNK(3,8),NTRBNK-4,
     -           'Track coordinate',
     -           'Status code','Status code')
            DO 430 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,TCL,ICL,SCL,ACL,BCL,FCL,
     -           .FALSE.,.FALSE.,.FALSE.,IFAIL)
            YPL(I)=REAL(ICL)
            IF(IFAIL.NE.0)YPL(I)=0
430         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,8))
            CALL GRNEXT
            CALL GRALOG('Prepared track - status code:')
       ENDIF
*   Diffusion coefficient.
       IF((LDEBUG.OR.LDRPLT).AND.TRAFLG(5))THEN
            CALL GRGRPH(COORD(3),TRABNK(3,5),NTRBNK-4,
     -           'Track coordinate',
     -           'Diffusion [cm for 1 cm of drift]','Diffusion')
            DO 440 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,TCL,ICL,YPL(I),ACL,BCL,FCL,
     -           .TRUE.,.FALSE.,.FALSE.,IFAIL)
            IF(IFAIL.NE.0)YPL(I)=-1.0
440         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,5))
            CALL GRNEXT
            CALL GRALOG('Prepared track - diffusion:')
       ENDIF
*   Townsend coefficient.
       IF((LDEBUG.OR.LDRPLT).AND.TRAFLG(6))THEN
            CALL GRGRPH(COORD(3),TRABNK(3,6),NTRBNK-4,
     -           'Track coordinate',
     -           'Townsend coefficient','Townsend coefficient')
            DO 450 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,TCL,ICL,SCL,YPL(I),BCL,FCL,
     -           .FALSE.,.TRUE.,.FALSE.,IFAIL)
            IF(IFAIL.NE.0)YPL(I)=-1.0
450         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,6))
            CALL GRNEXT
            CALL GRALOG('Prepared track - Townsend coefficient:')
       ENDIF
*   Attachment coefficient.
       IF((LDEBUG.OR.LDRPLT).AND.TRAFLG(7))THEN
            CALL GRGRPH(COORD(3),TRABNK(3,7),NTRBNK-4,
     -           'Track coordinate',
     -           'Attachment coefficient','Attachment')
            DO 460 I=1,MXLIST
            XCL=X0+REAL(I-1)*(X1-X0)/REAL(MXLIST-1)
            YCL=Y0+REAL(I-1)*(Y1-Y0)/REAL(MXLIST-1)
            ZCL=Z0+REAL(I-1)*(Z1-Z0)/REAL(MXLIST-1)
            XPL(I)=REAL(I-1)/REAL(MXLIST-1)
            CALL DLCTRI(XCL,YCL,ZCL,TCL,ICL,SCL,ACL,YPL(I),FCL,
     -           .FALSE.,.FALSE.,.TRUE.,IFAIL)
            IF(IFAIL.NE.0)YPL(I)=-1.0
460         CONTINUE
            CALL GRATTS('FUNCTION-2','POLYLINE')
            CALL GPL(MXLIST,XPL,YPL)
            CALL GRATTS('FUNCTION-1','POLYMARKER')
            CALL GPM(NTRBNK-4,COORD(3),TRABNK(3,7))
            CALL GRNEXT
            CALL GRALOG('Prepared track - Attachment:')
       ENDIF
*** Things seem to have worked properly, flag that things are OK.
       IFAIL=0
*** Remember how much time this took.
       CALL TIMLOG('Preparing the track interpolation:      ')
       END
